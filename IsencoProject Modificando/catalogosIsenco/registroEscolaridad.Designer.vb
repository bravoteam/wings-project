'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1008
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("registroEscolaridad"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class registroEscolaridad
    Inherits Global.System.Data.DataSet
    
    Private tableREGISTRO_ESCOLARIDAD As REGISTRO_ESCOLARIDADDataTable
    
    Private tableREGISTRO_ESCOLARIDAD_ANTERIOR As REGISTRO_ESCOLARIDAD_ANTERIORDataTable
    
    Private tableREGISTRO_ESCOLARIDAD_REPETIDOR As REGISTRO_ESCOLARIDAD_REPETIDORDataTable
    
    Private tableDATOS_FIRMAS As DATOS_FIRMASDataTable
    
    Private tableREPORTE_REGISTRO As REPORTE_REGISTRODataTable
    
    Private tableREPORTE_REGISTRO_FUERA As REPORTE_REGISTRO_FUERADataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("REGISTRO_ESCOLARIDAD")) Is Nothing) Then
                MyBase.Tables.Add(New REGISTRO_ESCOLARIDADDataTable(ds.Tables("REGISTRO_ESCOLARIDAD")))
            End If
            If (Not (ds.Tables("REGISTRO_ESCOLARIDAD_ANTERIOR")) Is Nothing) Then
                MyBase.Tables.Add(New REGISTRO_ESCOLARIDAD_ANTERIORDataTable(ds.Tables("REGISTRO_ESCOLARIDAD_ANTERIOR")))
            End If
            If (Not (ds.Tables("REGISTRO_ESCOLARIDAD_REPETIDOR")) Is Nothing) Then
                MyBase.Tables.Add(New REGISTRO_ESCOLARIDAD_REPETIDORDataTable(ds.Tables("REGISTRO_ESCOLARIDAD_REPETIDOR")))
            End If
            If (Not (ds.Tables("DATOS_FIRMAS")) Is Nothing) Then
                MyBase.Tables.Add(New DATOS_FIRMASDataTable(ds.Tables("DATOS_FIRMAS")))
            End If
            If (Not (ds.Tables("REPORTE_REGISTRO")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_REGISTRODataTable(ds.Tables("REPORTE_REGISTRO")))
            End If
            If (Not (ds.Tables("REPORTE_REGISTRO_FUERA")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_REGISTRO_FUERADataTable(ds.Tables("REPORTE_REGISTRO_FUERA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REGISTRO_ESCOLARIDAD() As REGISTRO_ESCOLARIDADDataTable
        Get
            Return Me.tableREGISTRO_ESCOLARIDAD
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REGISTRO_ESCOLARIDAD_ANTERIOR() As REGISTRO_ESCOLARIDAD_ANTERIORDataTable
        Get
            Return Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REGISTRO_ESCOLARIDAD_REPETIDOR() As REGISTRO_ESCOLARIDAD_REPETIDORDataTable
        Get
            Return Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DATOS_FIRMAS() As DATOS_FIRMASDataTable
        Get
            Return Me.tableDATOS_FIRMAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_REGISTRO() As REPORTE_REGISTRODataTable
        Get
            Return Me.tableREPORTE_REGISTRO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_REGISTRO_FUERA() As REPORTE_REGISTRO_FUERADataTable
        Get
            Return Me.tableREPORTE_REGISTRO_FUERA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As registroEscolaridad = CType(MyBase.Clone,registroEscolaridad)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("REGISTRO_ESCOLARIDAD")) Is Nothing) Then
                MyBase.Tables.Add(New REGISTRO_ESCOLARIDADDataTable(ds.Tables("REGISTRO_ESCOLARIDAD")))
            End If
            If (Not (ds.Tables("REGISTRO_ESCOLARIDAD_ANTERIOR")) Is Nothing) Then
                MyBase.Tables.Add(New REGISTRO_ESCOLARIDAD_ANTERIORDataTable(ds.Tables("REGISTRO_ESCOLARIDAD_ANTERIOR")))
            End If
            If (Not (ds.Tables("REGISTRO_ESCOLARIDAD_REPETIDOR")) Is Nothing) Then
                MyBase.Tables.Add(New REGISTRO_ESCOLARIDAD_REPETIDORDataTable(ds.Tables("REGISTRO_ESCOLARIDAD_REPETIDOR")))
            End If
            If (Not (ds.Tables("DATOS_FIRMAS")) Is Nothing) Then
                MyBase.Tables.Add(New DATOS_FIRMASDataTable(ds.Tables("DATOS_FIRMAS")))
            End If
            If (Not (ds.Tables("REPORTE_REGISTRO")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_REGISTRODataTable(ds.Tables("REPORTE_REGISTRO")))
            End If
            If (Not (ds.Tables("REPORTE_REGISTRO_FUERA")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_REGISTRO_FUERADataTable(ds.Tables("REPORTE_REGISTRO_FUERA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableREGISTRO_ESCOLARIDAD = CType(MyBase.Tables("REGISTRO_ESCOLARIDAD"),REGISTRO_ESCOLARIDADDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREGISTRO_ESCOLARIDAD) Is Nothing) Then
                Me.tableREGISTRO_ESCOLARIDAD.InitVars
            End If
        End If
        Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR = CType(MyBase.Tables("REGISTRO_ESCOLARIDAD_ANTERIOR"),REGISTRO_ESCOLARIDAD_ANTERIORDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR) Is Nothing) Then
                Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.InitVars
            End If
        End If
        Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR = CType(MyBase.Tables("REGISTRO_ESCOLARIDAD_REPETIDOR"),REGISTRO_ESCOLARIDAD_REPETIDORDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR) Is Nothing) Then
                Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.InitVars
            End If
        End If
        Me.tableDATOS_FIRMAS = CType(MyBase.Tables("DATOS_FIRMAS"),DATOS_FIRMASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDATOS_FIRMAS) Is Nothing) Then
                Me.tableDATOS_FIRMAS.InitVars
            End If
        End If
        Me.tableREPORTE_REGISTRO = CType(MyBase.Tables("REPORTE_REGISTRO"),REPORTE_REGISTRODataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_REGISTRO) Is Nothing) Then
                Me.tableREPORTE_REGISTRO.InitVars
            End If
        End If
        Me.tableREPORTE_REGISTRO_FUERA = CType(MyBase.Tables("REPORTE_REGISTRO_FUERA"),REPORTE_REGISTRO_FUERADataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_REGISTRO_FUERA) Is Nothing) Then
                Me.tableREPORTE_REGISTRO_FUERA.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "registroEscolaridad"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/registroEscolaridad.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableREGISTRO_ESCOLARIDAD = New REGISTRO_ESCOLARIDADDataTable()
        MyBase.Tables.Add(Me.tableREGISTRO_ESCOLARIDAD)
        Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR = New REGISTRO_ESCOLARIDAD_ANTERIORDataTable()
        MyBase.Tables.Add(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR)
        Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR = New REGISTRO_ESCOLARIDAD_REPETIDORDataTable()
        MyBase.Tables.Add(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR)
        Me.tableDATOS_FIRMAS = New DATOS_FIRMASDataTable()
        MyBase.Tables.Add(Me.tableDATOS_FIRMAS)
        Me.tableREPORTE_REGISTRO = New REPORTE_REGISTRODataTable()
        MyBase.Tables.Add(Me.tableREPORTE_REGISTRO)
        Me.tableREPORTE_REGISTRO_FUERA = New REPORTE_REGISTRO_FUERADataTable()
        MyBase.Tables.Add(Me.tableREPORTE_REGISTRO_FUERA)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeREGISTRO_ESCOLARIDAD() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeREGISTRO_ESCOLARIDAD_ANTERIOR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeREGISTRO_ESCOLARIDAD_REPETIDOR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDATOS_FIRMAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeREPORTE_REGISTRO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeREPORTE_REGISTRO_FUERA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As registroEscolaridad = New registroEscolaridad()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub REGISTRO_ESCOLARIDADRowChangeEventHandler(ByVal sender As Object, ByVal e As REGISTRO_ESCOLARIDADRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub REGISTRO_ESCOLARIDAD_ANTERIORRowChangeEventHandler(ByVal sender As Object, ByVal e As REGISTRO_ESCOLARIDAD_ANTERIORRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub REGISTRO_ESCOLARIDAD_REPETIDORRowChangeEventHandler(ByVal sender As Object, ByVal e As REGISTRO_ESCOLARIDAD_REPETIDORRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DATOS_FIRMASRowChangeEventHandler(ByVal sender As Object, ByVal e As DATOS_FIRMASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub REPORTE_REGISTRORowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_REGISTRORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub REPORTE_REGISTRO_FUERARowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_REGISTRO_FUERARowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REGISTRO_ESCOLARIDADDataTable
        Inherits Global.System.Data.TypedTableBase(Of REGISTRO_ESCOLARIDADRow)
        
        Private columnAPELLIDO_PATERNO As Global.System.Data.DataColumn
        
        Private columnAPELLIDO_MATERNO As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnmaterianombre As Global.System.Data.DataColumn
        
        Private columnacreditadas As Global.System.Data.DataColumn
        
        Private columnnoacreditadas As Global.System.Data.DataColumn
        
        Private columnnoacreditadasant As Global.System.Data.DataColumn
        
        Private columnIDLICENCIATURA As Global.System.Data.DataColumn
        
        Private columnIDSEMESTRE As Global.System.Data.DataColumn
        
        Private columnIDGRUPO As Global.System.Data.DataColumn
        
        Private columnIDESPECIALIDAD As Global.System.Data.DataColumn
        
        Private columnIDMATERIA As Global.System.Data.DataColumn
        
        Private columnCALIFICACION As Global.System.Data.DataColumn
        
        Private columncalificacion2 As Global.System.Data.DataColumn
        
        Private columnCURP As Global.System.Data.DataColumn
        
        Private columnGENERO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_MATERIA As Global.System.Data.DataColumn
        
        Private columnclaveisenco As Global.System.Data.DataColumn
        
        Private columnIDCAMPUS As Global.System.Data.DataColumn
        
        Private columnCARRERANOMBRE As Global.System.Data.DataColumn
        
        Private columnIDturno As Global.System.Data.DataColumn
        
        Private columnextra1 As Global.System.Data.DataColumn
        
        Private columnextra2 As Global.System.Data.DataColumn
        
        Private columnextra3 As Global.System.Data.DataColumn
        
        Private columnMATRICULA As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnTIPOCHECK As Global.System.Data.DataColumn
        
        Private columnIDALUMNO As Global.System.Data.DataColumn
        
        Private columnIDCICLOESCOLAR As Global.System.Data.DataColumn
        
        Private columnIDSTATUS As Global.System.Data.DataColumn
        
        Private columnCSTATUS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REGISTRO_ESCOLARIDAD"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDO_PATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO_PATERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDO_MATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO_MATERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property materianombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterianombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acreditadasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacreditadas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property noacreditadasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnoacreditadas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property noacreditadasantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnoacreditadasant
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDLICENCIATURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDLICENCIATURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDSEMESTREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDSEMESTRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDGRUPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDGRUPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDESPECIALIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDESPECIALIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDMATERIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDMATERIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CALIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCALIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property calificacion2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncalificacion2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CURPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GENEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBRE_MATERIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_MATERIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property claveisencoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclaveisenco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDCAMPUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDCAMPUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CARRERANOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARRERANOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDturnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDturno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property extra1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnextra1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property extra2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnextra2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property extra3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnextra3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATRICULAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATRICULA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOCHECKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCHECK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDALUMNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDALUMNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDCICLOESCOLARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDCICLOESCOLAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REGISTRO_ESCOLARIDADRow
            Get
                Return CType(Me.Rows(index),REGISTRO_ESCOLARIDADRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGISTRO_ESCOLARIDADRowChanging As REGISTRO_ESCOLARIDADRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGISTRO_ESCOLARIDADRowChanged As REGISTRO_ESCOLARIDADRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGISTRO_ESCOLARIDADRowDeleting As REGISTRO_ESCOLARIDADRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGISTRO_ESCOLARIDADRowDeleted As REGISTRO_ESCOLARIDADRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddREGISTRO_ESCOLARIDADRow(ByVal row As REGISTRO_ESCOLARIDADRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddREGISTRO_ESCOLARIDADRow( _
                    ByVal APELLIDO_PATERNO As String,  _
                    ByVal APELLIDO_MATERNO As String,  _
                    ByVal NOMBRE As String,  _
                    ByVal materianombre As String,  _
                    ByVal acreditadas As Long,  _
                    ByVal noacreditadas As Long,  _
                    ByVal noacreditadasant As Long,  _
                    ByVal IDLICENCIATURA As String,  _
                    ByVal IDSEMESTRE As String,  _
                    ByVal IDGRUPO As String,  _
                    ByVal IDESPECIALIDAD As String,  _
                    ByVal IDMATERIA As Long,  _
                    ByVal CALIFICACION As Double,  _
                    ByVal calificacion2 As Double,  _
                    ByVal CURP As String,  _
                    ByVal GENERO As String,  _
                    ByVal NOMBRE_MATERIA As String,  _
                    ByVal claveisenco As String,  _
                    ByVal IDCAMPUS As String,  _
                    ByVal CARRERANOMBRE As String,  _
                    ByVal IDturno As String,  _
                    ByVal extra1 As Double,  _
                    ByVal extra2 As Double,  _
                    ByVal extra3 As Double,  _
                    ByVal MATRICULA As String,  _
                    ByVal Expr1 As String,  _
                    ByVal TIPOCHECK As Boolean,  _
                    ByVal IDCICLOESCOLAR As String,  _
                    ByVal IDSTATUS As String,  _
                    ByVal CSTATUS As String) As REGISTRO_ESCOLARIDADRow
            Dim rowREGISTRO_ESCOLARIDADRow As REGISTRO_ESCOLARIDADRow = CType(Me.NewRow,REGISTRO_ESCOLARIDADRow)
            Dim columnValuesArray() As Object = New Object() {APELLIDO_PATERNO, APELLIDO_MATERNO, NOMBRE, materianombre, acreditadas, noacreditadas, noacreditadasant, IDLICENCIATURA, IDSEMESTRE, IDGRUPO, IDESPECIALIDAD, IDMATERIA, CALIFICACION, calificacion2, CURP, GENERO, NOMBRE_MATERIA, claveisenco, IDCAMPUS, CARRERANOMBRE, IDturno, extra1, extra2, extra3, MATRICULA, Expr1, TIPOCHECK, Nothing, IDCICLOESCOLAR, IDSTATUS, CSTATUS}
            rowREGISTRO_ESCOLARIDADRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREGISTRO_ESCOLARIDADRow)
            Return rowREGISTRO_ESCOLARIDADRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REGISTRO_ESCOLARIDADDataTable = CType(MyBase.Clone,REGISTRO_ESCOLARIDADDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REGISTRO_ESCOLARIDADDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAPELLIDO_PATERNO = MyBase.Columns("APELLIDO_PATERNO")
            Me.columnAPELLIDO_MATERNO = MyBase.Columns("APELLIDO_MATERNO")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnmaterianombre = MyBase.Columns("materianombre")
            Me.columnacreditadas = MyBase.Columns("acreditadas")
            Me.columnnoacreditadas = MyBase.Columns("noacreditadas")
            Me.columnnoacreditadasant = MyBase.Columns("noacreditadasant")
            Me.columnIDLICENCIATURA = MyBase.Columns("IDLICENCIATURA")
            Me.columnIDSEMESTRE = MyBase.Columns("IDSEMESTRE")
            Me.columnIDGRUPO = MyBase.Columns("IDGRUPO")
            Me.columnIDESPECIALIDAD = MyBase.Columns("IDESPECIALIDAD")
            Me.columnIDMATERIA = MyBase.Columns("IDMATERIA")
            Me.columnCALIFICACION = MyBase.Columns("CALIFICACION")
            Me.columncalificacion2 = MyBase.Columns("calificacion2")
            Me.columnCURP = MyBase.Columns("CURP")
            Me.columnGENERO = MyBase.Columns("GENERO")
            Me.columnNOMBRE_MATERIA = MyBase.Columns("NOMBRE_MATERIA")
            Me.columnclaveisenco = MyBase.Columns("claveisenco")
            Me.columnIDCAMPUS = MyBase.Columns("IDCAMPUS")
            Me.columnCARRERANOMBRE = MyBase.Columns("CARRERANOMBRE")
            Me.columnIDturno = MyBase.Columns("IDturno")
            Me.columnextra1 = MyBase.Columns("extra1")
            Me.columnextra2 = MyBase.Columns("extra2")
            Me.columnextra3 = MyBase.Columns("extra3")
            Me.columnMATRICULA = MyBase.Columns("MATRICULA")
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnTIPOCHECK = MyBase.Columns("TIPOCHECK")
            Me.columnIDALUMNO = MyBase.Columns("IDALUMNO")
            Me.columnIDCICLOESCOLAR = MyBase.Columns("IDCICLOESCOLAR")
            Me.columnIDSTATUS = MyBase.Columns("IDSTATUS")
            Me.columnCSTATUS = MyBase.Columns("CSTATUS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAPELLIDO_PATERNO = New Global.System.Data.DataColumn("APELLIDO_PATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO_PATERNO)
            Me.columnAPELLIDO_MATERNO = New Global.System.Data.DataColumn("APELLIDO_MATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO_MATERNO)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnmaterianombre = New Global.System.Data.DataColumn("materianombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterianombre)
            Me.columnacreditadas = New Global.System.Data.DataColumn("acreditadas", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacreditadas)
            Me.columnnoacreditadas = New Global.System.Data.DataColumn("noacreditadas", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnoacreditadas)
            Me.columnnoacreditadasant = New Global.System.Data.DataColumn("noacreditadasant", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnoacreditadasant)
            Me.columnIDLICENCIATURA = New Global.System.Data.DataColumn("IDLICENCIATURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDLICENCIATURA)
            Me.columnIDSEMESTRE = New Global.System.Data.DataColumn("IDSEMESTRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDSEMESTRE)
            Me.columnIDGRUPO = New Global.System.Data.DataColumn("IDGRUPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDGRUPO)
            Me.columnIDESPECIALIDAD = New Global.System.Data.DataColumn("IDESPECIALIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDESPECIALIDAD)
            Me.columnIDMATERIA = New Global.System.Data.DataColumn("IDMATERIA", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDMATERIA)
            Me.columnCALIFICACION = New Global.System.Data.DataColumn("CALIFICACION", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCALIFICACION)
            Me.columncalificacion2 = New Global.System.Data.DataColumn("calificacion2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncalificacion2)
            Me.columnCURP = New Global.System.Data.DataColumn("CURP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURP)
            Me.columnGENERO = New Global.System.Data.DataColumn("GENERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENERO)
            Me.columnNOMBRE_MATERIA = New Global.System.Data.DataColumn("NOMBRE_MATERIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_MATERIA)
            Me.columnclaveisenco = New Global.System.Data.DataColumn("claveisenco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclaveisenco)
            Me.columnIDCAMPUS = New Global.System.Data.DataColumn("IDCAMPUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDCAMPUS)
            Me.columnCARRERANOMBRE = New Global.System.Data.DataColumn("CARRERANOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARRERANOMBRE)
            Me.columnIDturno = New Global.System.Data.DataColumn("IDturno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDturno)
            Me.columnextra1 = New Global.System.Data.DataColumn("extra1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextra1)
            Me.columnextra2 = New Global.System.Data.DataColumn("extra2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextra2)
            Me.columnextra3 = New Global.System.Data.DataColumn("extra3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextra3)
            Me.columnMATRICULA = New Global.System.Data.DataColumn("MATRICULA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATRICULA)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnTIPOCHECK = New Global.System.Data.DataColumn("TIPOCHECK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCHECK)
            Me.columnIDALUMNO = New Global.System.Data.DataColumn("IDALUMNO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDALUMNO)
            Me.columnIDCICLOESCOLAR = New Global.System.Data.DataColumn("IDCICLOESCOLAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDCICLOESCOLAR)
            Me.columnIDSTATUS = New Global.System.Data.DataColumn("IDSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDSTATUS)
            Me.columnCSTATUS = New Global.System.Data.DataColumn("CSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCSTATUS)
            Me.columnAPELLIDO_PATERNO.MaxLength = 255
            Me.columnAPELLIDO_MATERNO.MaxLength = 255
            Me.columnNOMBRE.MaxLength = 255
            Me.columnmaterianombre.MaxLength = 255
            Me.columnacreditadas.AllowDBNull = false
            Me.columnnoacreditadas.AllowDBNull = false
            Me.columnnoacreditadasant.AllowDBNull = false
            Me.columnIDLICENCIATURA.MaxLength = 50
            Me.columnIDSEMESTRE.AllowDBNull = false
            Me.columnIDSEMESTRE.MaxLength = 50
            Me.columnIDGRUPO.MaxLength = 50
            Me.columnIDESPECIALIDAD.MaxLength = 50
            Me.columnIDMATERIA.AllowDBNull = false
            Me.columnCALIFICACION.AllowDBNull = false
            Me.columncalificacion2.AllowDBNull = false
            Me.columnCURP.MaxLength = 18
            Me.columnGENERO.MaxLength = 1
            Me.columnNOMBRE_MATERIA.MaxLength = 255
            Me.columnclaveisenco.MaxLength = 50
            Me.columnIDCAMPUS.MaxLength = 50
            Me.columnCARRERANOMBRE.MaxLength = 50
            Me.columnIDturno.MaxLength = 50
            Me.columnextra1.ReadOnly = true
            Me.columnextra2.ReadOnly = true
            Me.columnextra3.ReadOnly = true
            Me.columnMATRICULA.MaxLength = 12
            Me.columnExpr1.MaxLength = 12
            Me.columnTIPOCHECK.AllowDBNull = false
            Me.columnIDALUMNO.AutoIncrement = true
            Me.columnIDALUMNO.AutoIncrementSeed = -1
            Me.columnIDALUMNO.AutoIncrementStep = -1
            Me.columnIDALUMNO.AllowDBNull = false
            Me.columnIDALUMNO.ReadOnly = true
            Me.columnIDCICLOESCOLAR.AllowDBNull = false
            Me.columnIDCICLOESCOLAR.MaxLength = 10
            Me.columnIDSTATUS.MaxLength = 50
            Me.columnCSTATUS.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewREGISTRO_ESCOLARIDADRow() As REGISTRO_ESCOLARIDADRow
            Return CType(Me.NewRow,REGISTRO_ESCOLARIDADRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REGISTRO_ESCOLARIDADRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REGISTRO_ESCOLARIDADRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REGISTRO_ESCOLARIDADRowChangedEvent) Is Nothing) Then
                RaiseEvent REGISTRO_ESCOLARIDADRowChanged(Me, New REGISTRO_ESCOLARIDADRowChangeEvent(CType(e.Row,REGISTRO_ESCOLARIDADRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REGISTRO_ESCOLARIDADRowChangingEvent) Is Nothing) Then
                RaiseEvent REGISTRO_ESCOLARIDADRowChanging(Me, New REGISTRO_ESCOLARIDADRowChangeEvent(CType(e.Row,REGISTRO_ESCOLARIDADRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REGISTRO_ESCOLARIDADRowDeletedEvent) Is Nothing) Then
                RaiseEvent REGISTRO_ESCOLARIDADRowDeleted(Me, New REGISTRO_ESCOLARIDADRowChangeEvent(CType(e.Row,REGISTRO_ESCOLARIDADRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REGISTRO_ESCOLARIDADRowDeletingEvent) Is Nothing) Then
                RaiseEvent REGISTRO_ESCOLARIDADRowDeleting(Me, New REGISTRO_ESCOLARIDADRowChangeEvent(CType(e.Row,REGISTRO_ESCOLARIDADRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveREGISTRO_ESCOLARIDADRow(ByVal row As REGISTRO_ESCOLARIDADRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As registroEscolaridad = New registroEscolaridad()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REGISTRO_ESCOLARIDADDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REGISTRO_ESCOLARIDAD_ANTERIORDataTable
        Inherits Global.System.Data.TypedTableBase(Of REGISTRO_ESCOLARIDAD_ANTERIORRow)
        
        Private columnAPELLIDO_PATERNO As Global.System.Data.DataColumn
        
        Private columnAPELLIDO_MATERNO As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnmaterianombre As Global.System.Data.DataColumn
        
        Private columnacreditadas As Global.System.Data.DataColumn
        
        Private columnnoacreditadas As Global.System.Data.DataColumn
        
        Private columnIDLICENCIATURA As Global.System.Data.DataColumn
        
        Private columnIDSEMESTRE As Global.System.Data.DataColumn
        
        Private columnIDGRUPO As Global.System.Data.DataColumn
        
        Private columnIDESPECIALIDAD As Global.System.Data.DataColumn
        
        Private columnIDMATERIA As Global.System.Data.DataColumn
        
        Private columnCALIFICACION As Global.System.Data.DataColumn
        
        Private columncalificacion2 As Global.System.Data.DataColumn
        
        Private columnCURP As Global.System.Data.DataColumn
        
        Private columnGENERO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_MATERIA As Global.System.Data.DataColumn
        
        Private columnclaveisenco As Global.System.Data.DataColumn
        
        Private columnIDSTATUS As Global.System.Data.DataColumn
        
        Private columnIDCAMPUS As Global.System.Data.DataColumn
        
        Private columnCARRERANOMBRE As Global.System.Data.DataColumn
        
        Private columnIDturno As Global.System.Data.DataColumn
        
        Private columnextra1 As Global.System.Data.DataColumn
        
        Private columnextra2 As Global.System.Data.DataColumn
        
        Private columnextra3 As Global.System.Data.DataColumn
        
        Private columnMATRICULA As Global.System.Data.DataColumn
        
        Private columnnoacreditadasant As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnIDALUMNO As Global.System.Data.DataColumn
        
        Private columnIDCICLOESCOLAR As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REGISTRO_ESCOLARIDAD_ANTERIOR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDO_PATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO_PATERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDO_MATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO_MATERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property materianombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterianombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acreditadasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacreditadas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property noacreditadasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnoacreditadas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDLICENCIATURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDLICENCIATURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDSEMESTREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDSEMESTRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDGRUPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDGRUPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDESPECIALIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDESPECIALIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDMATERIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDMATERIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CALIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCALIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property calificacion2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncalificacion2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CURPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GENEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBRE_MATERIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_MATERIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property claveisencoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclaveisenco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDCAMPUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDCAMPUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CARRERANOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARRERANOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDturnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDturno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property extra1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnextra1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property extra2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnextra2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property extra3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnextra3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATRICULAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATRICULA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property noacreditadasantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnoacreditadasant
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDALUMNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDALUMNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDCICLOESCOLARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDCICLOESCOLAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REGISTRO_ESCOLARIDAD_ANTERIORRow
            Get
                Return CType(Me.Rows(index),REGISTRO_ESCOLARIDAD_ANTERIORRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGISTRO_ESCOLARIDAD_ANTERIORRowChanging As REGISTRO_ESCOLARIDAD_ANTERIORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGISTRO_ESCOLARIDAD_ANTERIORRowChanged As REGISTRO_ESCOLARIDAD_ANTERIORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGISTRO_ESCOLARIDAD_ANTERIORRowDeleting As REGISTRO_ESCOLARIDAD_ANTERIORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGISTRO_ESCOLARIDAD_ANTERIORRowDeleted As REGISTRO_ESCOLARIDAD_ANTERIORRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddREGISTRO_ESCOLARIDAD_ANTERIORRow(ByVal row As REGISTRO_ESCOLARIDAD_ANTERIORRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddREGISTRO_ESCOLARIDAD_ANTERIORRow( _
                    ByVal APELLIDO_PATERNO As String,  _
                    ByVal APELLIDO_MATERNO As String,  _
                    ByVal NOMBRE As String,  _
                    ByVal materianombre As String,  _
                    ByVal acreditadas As Long,  _
                    ByVal noacreditadas As Long,  _
                    ByVal IDLICENCIATURA As String,  _
                    ByVal IDSEMESTRE As String,  _
                    ByVal IDGRUPO As String,  _
                    ByVal IDESPECIALIDAD As String,  _
                    ByVal IDMATERIA As Long,  _
                    ByVal CALIFICACION As Double,  _
                    ByVal calificacion2 As Double,  _
                    ByVal CURP As String,  _
                    ByVal GENERO As String,  _
                    ByVal NOMBRE_MATERIA As String,  _
                    ByVal claveisenco As String,  _
                    ByVal IDSTATUS As String,  _
                    ByVal IDCAMPUS As String,  _
                    ByVal CARRERANOMBRE As String,  _
                    ByVal IDturno As String,  _
                    ByVal extra1 As Double,  _
                    ByVal extra2 As Double,  _
                    ByVal extra3 As Double,  _
                    ByVal MATRICULA As String,  _
                    ByVal noacreditadasant As Long,  _
                    ByVal Expr1 As String,  _
                    ByVal IDCICLOESCOLAR As String) As REGISTRO_ESCOLARIDAD_ANTERIORRow
            Dim rowREGISTRO_ESCOLARIDAD_ANTERIORRow As REGISTRO_ESCOLARIDAD_ANTERIORRow = CType(Me.NewRow,REGISTRO_ESCOLARIDAD_ANTERIORRow)
            Dim columnValuesArray() As Object = New Object() {APELLIDO_PATERNO, APELLIDO_MATERNO, NOMBRE, materianombre, acreditadas, noacreditadas, IDLICENCIATURA, IDSEMESTRE, IDGRUPO, IDESPECIALIDAD, IDMATERIA, CALIFICACION, calificacion2, CURP, GENERO, NOMBRE_MATERIA, claveisenco, IDSTATUS, IDCAMPUS, CARRERANOMBRE, IDturno, extra1, extra2, extra3, MATRICULA, noacreditadasant, Expr1, Nothing, IDCICLOESCOLAR}
            rowREGISTRO_ESCOLARIDAD_ANTERIORRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREGISTRO_ESCOLARIDAD_ANTERIORRow)
            Return rowREGISTRO_ESCOLARIDAD_ANTERIORRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REGISTRO_ESCOLARIDAD_ANTERIORDataTable = CType(MyBase.Clone,REGISTRO_ESCOLARIDAD_ANTERIORDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REGISTRO_ESCOLARIDAD_ANTERIORDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAPELLIDO_PATERNO = MyBase.Columns("APELLIDO_PATERNO")
            Me.columnAPELLIDO_MATERNO = MyBase.Columns("APELLIDO_MATERNO")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnmaterianombre = MyBase.Columns("materianombre")
            Me.columnacreditadas = MyBase.Columns("acreditadas")
            Me.columnnoacreditadas = MyBase.Columns("noacreditadas")
            Me.columnIDLICENCIATURA = MyBase.Columns("IDLICENCIATURA")
            Me.columnIDSEMESTRE = MyBase.Columns("IDSEMESTRE")
            Me.columnIDGRUPO = MyBase.Columns("IDGRUPO")
            Me.columnIDESPECIALIDAD = MyBase.Columns("IDESPECIALIDAD")
            Me.columnIDMATERIA = MyBase.Columns("IDMATERIA")
            Me.columnCALIFICACION = MyBase.Columns("CALIFICACION")
            Me.columncalificacion2 = MyBase.Columns("calificacion2")
            Me.columnCURP = MyBase.Columns("CURP")
            Me.columnGENERO = MyBase.Columns("GENERO")
            Me.columnNOMBRE_MATERIA = MyBase.Columns("NOMBRE_MATERIA")
            Me.columnclaveisenco = MyBase.Columns("claveisenco")
            Me.columnIDSTATUS = MyBase.Columns("IDSTATUS")
            Me.columnIDCAMPUS = MyBase.Columns("IDCAMPUS")
            Me.columnCARRERANOMBRE = MyBase.Columns("CARRERANOMBRE")
            Me.columnIDturno = MyBase.Columns("IDturno")
            Me.columnextra1 = MyBase.Columns("extra1")
            Me.columnextra2 = MyBase.Columns("extra2")
            Me.columnextra3 = MyBase.Columns("extra3")
            Me.columnMATRICULA = MyBase.Columns("MATRICULA")
            Me.columnnoacreditadasant = MyBase.Columns("noacreditadasant")
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnIDALUMNO = MyBase.Columns("IDALUMNO")
            Me.columnIDCICLOESCOLAR = MyBase.Columns("IDCICLOESCOLAR")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAPELLIDO_PATERNO = New Global.System.Data.DataColumn("APELLIDO_PATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO_PATERNO)
            Me.columnAPELLIDO_MATERNO = New Global.System.Data.DataColumn("APELLIDO_MATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO_MATERNO)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnmaterianombre = New Global.System.Data.DataColumn("materianombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterianombre)
            Me.columnacreditadas = New Global.System.Data.DataColumn("acreditadas", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacreditadas)
            Me.columnnoacreditadas = New Global.System.Data.DataColumn("noacreditadas", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnoacreditadas)
            Me.columnIDLICENCIATURA = New Global.System.Data.DataColumn("IDLICENCIATURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDLICENCIATURA)
            Me.columnIDSEMESTRE = New Global.System.Data.DataColumn("IDSEMESTRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDSEMESTRE)
            Me.columnIDGRUPO = New Global.System.Data.DataColumn("IDGRUPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDGRUPO)
            Me.columnIDESPECIALIDAD = New Global.System.Data.DataColumn("IDESPECIALIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDESPECIALIDAD)
            Me.columnIDMATERIA = New Global.System.Data.DataColumn("IDMATERIA", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDMATERIA)
            Me.columnCALIFICACION = New Global.System.Data.DataColumn("CALIFICACION", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCALIFICACION)
            Me.columncalificacion2 = New Global.System.Data.DataColumn("calificacion2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncalificacion2)
            Me.columnCURP = New Global.System.Data.DataColumn("CURP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURP)
            Me.columnGENERO = New Global.System.Data.DataColumn("GENERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENERO)
            Me.columnNOMBRE_MATERIA = New Global.System.Data.DataColumn("NOMBRE_MATERIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_MATERIA)
            Me.columnclaveisenco = New Global.System.Data.DataColumn("claveisenco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclaveisenco)
            Me.columnIDSTATUS = New Global.System.Data.DataColumn("IDSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDSTATUS)
            Me.columnIDCAMPUS = New Global.System.Data.DataColumn("IDCAMPUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDCAMPUS)
            Me.columnCARRERANOMBRE = New Global.System.Data.DataColumn("CARRERANOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARRERANOMBRE)
            Me.columnIDturno = New Global.System.Data.DataColumn("IDturno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDturno)
            Me.columnextra1 = New Global.System.Data.DataColumn("extra1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextra1)
            Me.columnextra2 = New Global.System.Data.DataColumn("extra2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextra2)
            Me.columnextra3 = New Global.System.Data.DataColumn("extra3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextra3)
            Me.columnMATRICULA = New Global.System.Data.DataColumn("MATRICULA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATRICULA)
            Me.columnnoacreditadasant = New Global.System.Data.DataColumn("noacreditadasant", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnoacreditadasant)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnIDALUMNO = New Global.System.Data.DataColumn("IDALUMNO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDALUMNO)
            Me.columnIDCICLOESCOLAR = New Global.System.Data.DataColumn("IDCICLOESCOLAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDCICLOESCOLAR)
            Me.columnAPELLIDO_PATERNO.MaxLength = 255
            Me.columnAPELLIDO_MATERNO.MaxLength = 255
            Me.columnNOMBRE.MaxLength = 255
            Me.columnmaterianombre.MaxLength = 255
            Me.columnacreditadas.AllowDBNull = false
            Me.columnnoacreditadas.AllowDBNull = false
            Me.columnIDLICENCIATURA.MaxLength = 50
            Me.columnIDSEMESTRE.AllowDBNull = false
            Me.columnIDSEMESTRE.MaxLength = 50
            Me.columnIDGRUPO.MaxLength = 50
            Me.columnIDESPECIALIDAD.MaxLength = 50
            Me.columnIDMATERIA.AllowDBNull = false
            Me.columnCALIFICACION.AllowDBNull = false
            Me.columncalificacion2.AllowDBNull = false
            Me.columnCURP.MaxLength = 18
            Me.columnGENERO.MaxLength = 1
            Me.columnNOMBRE_MATERIA.MaxLength = 255
            Me.columnclaveisenco.MaxLength = 50
            Me.columnIDSTATUS.MaxLength = 50
            Me.columnIDCAMPUS.MaxLength = 50
            Me.columnCARRERANOMBRE.MaxLength = 50
            Me.columnIDturno.MaxLength = 50
            Me.columnextra1.ReadOnly = true
            Me.columnextra2.ReadOnly = true
            Me.columnextra3.ReadOnly = true
            Me.columnMATRICULA.MaxLength = 12
            Me.columnnoacreditadasant.AllowDBNull = false
            Me.columnExpr1.MaxLength = 12
            Me.columnIDALUMNO.AutoIncrement = true
            Me.columnIDALUMNO.AutoIncrementSeed = -1
            Me.columnIDALUMNO.AutoIncrementStep = -1
            Me.columnIDALUMNO.AllowDBNull = false
            Me.columnIDALUMNO.ReadOnly = true
            Me.columnIDCICLOESCOLAR.AllowDBNull = false
            Me.columnIDCICLOESCOLAR.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewREGISTRO_ESCOLARIDAD_ANTERIORRow() As REGISTRO_ESCOLARIDAD_ANTERIORRow
            Return CType(Me.NewRow,REGISTRO_ESCOLARIDAD_ANTERIORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REGISTRO_ESCOLARIDAD_ANTERIORRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REGISTRO_ESCOLARIDAD_ANTERIORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REGISTRO_ESCOLARIDAD_ANTERIORRowChangedEvent) Is Nothing) Then
                RaiseEvent REGISTRO_ESCOLARIDAD_ANTERIORRowChanged(Me, New REGISTRO_ESCOLARIDAD_ANTERIORRowChangeEvent(CType(e.Row,REGISTRO_ESCOLARIDAD_ANTERIORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REGISTRO_ESCOLARIDAD_ANTERIORRowChangingEvent) Is Nothing) Then
                RaiseEvent REGISTRO_ESCOLARIDAD_ANTERIORRowChanging(Me, New REGISTRO_ESCOLARIDAD_ANTERIORRowChangeEvent(CType(e.Row,REGISTRO_ESCOLARIDAD_ANTERIORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REGISTRO_ESCOLARIDAD_ANTERIORRowDeletedEvent) Is Nothing) Then
                RaiseEvent REGISTRO_ESCOLARIDAD_ANTERIORRowDeleted(Me, New REGISTRO_ESCOLARIDAD_ANTERIORRowChangeEvent(CType(e.Row,REGISTRO_ESCOLARIDAD_ANTERIORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REGISTRO_ESCOLARIDAD_ANTERIORRowDeletingEvent) Is Nothing) Then
                RaiseEvent REGISTRO_ESCOLARIDAD_ANTERIORRowDeleting(Me, New REGISTRO_ESCOLARIDAD_ANTERIORRowChangeEvent(CType(e.Row,REGISTRO_ESCOLARIDAD_ANTERIORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveREGISTRO_ESCOLARIDAD_ANTERIORRow(ByVal row As REGISTRO_ESCOLARIDAD_ANTERIORRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As registroEscolaridad = New registroEscolaridad()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REGISTRO_ESCOLARIDAD_ANTERIORDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REGISTRO_ESCOLARIDAD_REPETIDORDataTable
        Inherits Global.System.Data.TypedTableBase(Of REGISTRO_ESCOLARIDAD_REPETIDORRow)
        
        Private columnAPELLIDO_PATERNO As Global.System.Data.DataColumn
        
        Private columnAPELLIDO_MATERNO As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnmaterianombre As Global.System.Data.DataColumn
        
        Private columnacreditadas As Global.System.Data.DataColumn
        
        Private columnnoacreditadas As Global.System.Data.DataColumn
        
        Private columnIDLICENCIATURA As Global.System.Data.DataColumn
        
        Private columnIDSEMESTRE As Global.System.Data.DataColumn
        
        Private columnIDGRUPO As Global.System.Data.DataColumn
        
        Private columnIDESPECIALIDAD As Global.System.Data.DataColumn
        
        Private columnIDMATERIA As Global.System.Data.DataColumn
        
        Private columnCALIFICACION As Global.System.Data.DataColumn
        
        Private columncalificacion2 As Global.System.Data.DataColumn
        
        Private columnCURP As Global.System.Data.DataColumn
        
        Private columnGENERO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_MATERIA As Global.System.Data.DataColumn
        
        Private columnclaveisenco As Global.System.Data.DataColumn
        
        Private columnIDSTATUS As Global.System.Data.DataColumn
        
        Private columnIDCAMPUS As Global.System.Data.DataColumn
        
        Private columnCARRERANOMBRE As Global.System.Data.DataColumn
        
        Private columnIDturno As Global.System.Data.DataColumn
        
        Private columnextra1 As Global.System.Data.DataColumn
        
        Private columnextra2 As Global.System.Data.DataColumn
        
        Private columnextra3 As Global.System.Data.DataColumn
        
        Private columnMATRICULA As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REGISTRO_ESCOLARIDAD_REPETIDOR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDO_PATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO_PATERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDO_MATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO_MATERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property materianombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterianombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acreditadasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacreditadas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property noacreditadasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnoacreditadas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDLICENCIATURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDLICENCIATURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDSEMESTREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDSEMESTRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDGRUPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDGRUPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDESPECIALIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDESPECIALIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDMATERIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDMATERIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CALIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCALIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property calificacion2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncalificacion2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CURPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GENEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBRE_MATERIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_MATERIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property claveisencoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclaveisenco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDCAMPUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDCAMPUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CARRERANOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARRERANOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDturnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDturno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property extra1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnextra1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property extra2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnextra2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property extra3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnextra3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATRICULAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATRICULA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REGISTRO_ESCOLARIDAD_REPETIDORRow
            Get
                Return CType(Me.Rows(index),REGISTRO_ESCOLARIDAD_REPETIDORRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGISTRO_ESCOLARIDAD_REPETIDORRowChanging As REGISTRO_ESCOLARIDAD_REPETIDORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGISTRO_ESCOLARIDAD_REPETIDORRowChanged As REGISTRO_ESCOLARIDAD_REPETIDORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGISTRO_ESCOLARIDAD_REPETIDORRowDeleting As REGISTRO_ESCOLARIDAD_REPETIDORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGISTRO_ESCOLARIDAD_REPETIDORRowDeleted As REGISTRO_ESCOLARIDAD_REPETIDORRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddREGISTRO_ESCOLARIDAD_REPETIDORRow(ByVal row As REGISTRO_ESCOLARIDAD_REPETIDORRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddREGISTRO_ESCOLARIDAD_REPETIDORRow( _
                    ByVal APELLIDO_PATERNO As String,  _
                    ByVal APELLIDO_MATERNO As String,  _
                    ByVal NOMBRE As String,  _
                    ByVal materianombre As String,  _
                    ByVal acreditadas As Long,  _
                    ByVal noacreditadas As Long,  _
                    ByVal IDLICENCIATURA As String,  _
                    ByVal IDSEMESTRE As String,  _
                    ByVal IDGRUPO As String,  _
                    ByVal IDESPECIALIDAD As String,  _
                    ByVal IDMATERIA As Long,  _
                    ByVal CALIFICACION As Double,  _
                    ByVal calificacion2 As Double,  _
                    ByVal CURP As String,  _
                    ByVal GENERO As String,  _
                    ByVal NOMBRE_MATERIA As String,  _
                    ByVal claveisenco As String,  _
                    ByVal IDSTATUS As String,  _
                    ByVal IDCAMPUS As String,  _
                    ByVal CARRERANOMBRE As String,  _
                    ByVal IDturno As String,  _
                    ByVal extra1 As Double,  _
                    ByVal extra2 As Double,  _
                    ByVal extra3 As Double,  _
                    ByVal MATRICULA As String,  _
                    ByVal Expr1 As String) As REGISTRO_ESCOLARIDAD_REPETIDORRow
            Dim rowREGISTRO_ESCOLARIDAD_REPETIDORRow As REGISTRO_ESCOLARIDAD_REPETIDORRow = CType(Me.NewRow,REGISTRO_ESCOLARIDAD_REPETIDORRow)
            Dim columnValuesArray() As Object = New Object() {APELLIDO_PATERNO, APELLIDO_MATERNO, NOMBRE, materianombre, acreditadas, noacreditadas, IDLICENCIATURA, IDSEMESTRE, IDGRUPO, IDESPECIALIDAD, IDMATERIA, CALIFICACION, calificacion2, CURP, GENERO, NOMBRE_MATERIA, claveisenco, IDSTATUS, IDCAMPUS, CARRERANOMBRE, IDturno, extra1, extra2, extra3, MATRICULA, Expr1}
            rowREGISTRO_ESCOLARIDAD_REPETIDORRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREGISTRO_ESCOLARIDAD_REPETIDORRow)
            Return rowREGISTRO_ESCOLARIDAD_REPETIDORRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REGISTRO_ESCOLARIDAD_REPETIDORDataTable = CType(MyBase.Clone,REGISTRO_ESCOLARIDAD_REPETIDORDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REGISTRO_ESCOLARIDAD_REPETIDORDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAPELLIDO_PATERNO = MyBase.Columns("APELLIDO_PATERNO")
            Me.columnAPELLIDO_MATERNO = MyBase.Columns("APELLIDO_MATERNO")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnmaterianombre = MyBase.Columns("materianombre")
            Me.columnacreditadas = MyBase.Columns("acreditadas")
            Me.columnnoacreditadas = MyBase.Columns("noacreditadas")
            Me.columnIDLICENCIATURA = MyBase.Columns("IDLICENCIATURA")
            Me.columnIDSEMESTRE = MyBase.Columns("IDSEMESTRE")
            Me.columnIDGRUPO = MyBase.Columns("IDGRUPO")
            Me.columnIDESPECIALIDAD = MyBase.Columns("IDESPECIALIDAD")
            Me.columnIDMATERIA = MyBase.Columns("IDMATERIA")
            Me.columnCALIFICACION = MyBase.Columns("CALIFICACION")
            Me.columncalificacion2 = MyBase.Columns("calificacion2")
            Me.columnCURP = MyBase.Columns("CURP")
            Me.columnGENERO = MyBase.Columns("GENERO")
            Me.columnNOMBRE_MATERIA = MyBase.Columns("NOMBRE_MATERIA")
            Me.columnclaveisenco = MyBase.Columns("claveisenco")
            Me.columnIDSTATUS = MyBase.Columns("IDSTATUS")
            Me.columnIDCAMPUS = MyBase.Columns("IDCAMPUS")
            Me.columnCARRERANOMBRE = MyBase.Columns("CARRERANOMBRE")
            Me.columnIDturno = MyBase.Columns("IDturno")
            Me.columnextra1 = MyBase.Columns("extra1")
            Me.columnextra2 = MyBase.Columns("extra2")
            Me.columnextra3 = MyBase.Columns("extra3")
            Me.columnMATRICULA = MyBase.Columns("MATRICULA")
            Me.columnExpr1 = MyBase.Columns("Expr1")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAPELLIDO_PATERNO = New Global.System.Data.DataColumn("APELLIDO_PATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO_PATERNO)
            Me.columnAPELLIDO_MATERNO = New Global.System.Data.DataColumn("APELLIDO_MATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO_MATERNO)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnmaterianombre = New Global.System.Data.DataColumn("materianombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterianombre)
            Me.columnacreditadas = New Global.System.Data.DataColumn("acreditadas", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacreditadas)
            Me.columnnoacreditadas = New Global.System.Data.DataColumn("noacreditadas", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnoacreditadas)
            Me.columnIDLICENCIATURA = New Global.System.Data.DataColumn("IDLICENCIATURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDLICENCIATURA)
            Me.columnIDSEMESTRE = New Global.System.Data.DataColumn("IDSEMESTRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDSEMESTRE)
            Me.columnIDGRUPO = New Global.System.Data.DataColumn("IDGRUPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDGRUPO)
            Me.columnIDESPECIALIDAD = New Global.System.Data.DataColumn("IDESPECIALIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDESPECIALIDAD)
            Me.columnIDMATERIA = New Global.System.Data.DataColumn("IDMATERIA", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDMATERIA)
            Me.columnCALIFICACION = New Global.System.Data.DataColumn("CALIFICACION", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCALIFICACION)
            Me.columncalificacion2 = New Global.System.Data.DataColumn("calificacion2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncalificacion2)
            Me.columnCURP = New Global.System.Data.DataColumn("CURP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURP)
            Me.columnGENERO = New Global.System.Data.DataColumn("GENERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENERO)
            Me.columnNOMBRE_MATERIA = New Global.System.Data.DataColumn("NOMBRE_MATERIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_MATERIA)
            Me.columnclaveisenco = New Global.System.Data.DataColumn("claveisenco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclaveisenco)
            Me.columnIDSTATUS = New Global.System.Data.DataColumn("IDSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDSTATUS)
            Me.columnIDCAMPUS = New Global.System.Data.DataColumn("IDCAMPUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDCAMPUS)
            Me.columnCARRERANOMBRE = New Global.System.Data.DataColumn("CARRERANOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARRERANOMBRE)
            Me.columnIDturno = New Global.System.Data.DataColumn("IDturno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDturno)
            Me.columnextra1 = New Global.System.Data.DataColumn("extra1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextra1)
            Me.columnextra2 = New Global.System.Data.DataColumn("extra2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextra2)
            Me.columnextra3 = New Global.System.Data.DataColumn("extra3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextra3)
            Me.columnMATRICULA = New Global.System.Data.DataColumn("MATRICULA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATRICULA)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnAPELLIDO_PATERNO.MaxLength = 255
            Me.columnAPELLIDO_MATERNO.MaxLength = 255
            Me.columnNOMBRE.MaxLength = 255
            Me.columnmaterianombre.MaxLength = 255
            Me.columnacreditadas.AllowDBNull = false
            Me.columnnoacreditadas.AllowDBNull = false
            Me.columnIDLICENCIATURA.MaxLength = 50
            Me.columnIDSEMESTRE.MaxLength = 50
            Me.columnIDGRUPO.MaxLength = 50
            Me.columnIDESPECIALIDAD.MaxLength = 50
            Me.columnIDMATERIA.AllowDBNull = false
            Me.columnCALIFICACION.AllowDBNull = false
            Me.columncalificacion2.AllowDBNull = false
            Me.columnCURP.MaxLength = 18
            Me.columnGENERO.MaxLength = 1
            Me.columnNOMBRE_MATERIA.MaxLength = 255
            Me.columnclaveisenco.MaxLength = 50
            Me.columnIDSTATUS.MaxLength = 50
            Me.columnIDCAMPUS.MaxLength = 50
            Me.columnCARRERANOMBRE.MaxLength = 50
            Me.columnIDturno.MaxLength = 50
            Me.columnextra1.ReadOnly = true
            Me.columnextra2.ReadOnly = true
            Me.columnextra3.ReadOnly = true
            Me.columnMATRICULA.MaxLength = 12
            Me.columnExpr1.MaxLength = 12
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewREGISTRO_ESCOLARIDAD_REPETIDORRow() As REGISTRO_ESCOLARIDAD_REPETIDORRow
            Return CType(Me.NewRow,REGISTRO_ESCOLARIDAD_REPETIDORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REGISTRO_ESCOLARIDAD_REPETIDORRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REGISTRO_ESCOLARIDAD_REPETIDORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REGISTRO_ESCOLARIDAD_REPETIDORRowChangedEvent) Is Nothing) Then
                RaiseEvent REGISTRO_ESCOLARIDAD_REPETIDORRowChanged(Me, New REGISTRO_ESCOLARIDAD_REPETIDORRowChangeEvent(CType(e.Row,REGISTRO_ESCOLARIDAD_REPETIDORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REGISTRO_ESCOLARIDAD_REPETIDORRowChangingEvent) Is Nothing) Then
                RaiseEvent REGISTRO_ESCOLARIDAD_REPETIDORRowChanging(Me, New REGISTRO_ESCOLARIDAD_REPETIDORRowChangeEvent(CType(e.Row,REGISTRO_ESCOLARIDAD_REPETIDORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REGISTRO_ESCOLARIDAD_REPETIDORRowDeletedEvent) Is Nothing) Then
                RaiseEvent REGISTRO_ESCOLARIDAD_REPETIDORRowDeleted(Me, New REGISTRO_ESCOLARIDAD_REPETIDORRowChangeEvent(CType(e.Row,REGISTRO_ESCOLARIDAD_REPETIDORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REGISTRO_ESCOLARIDAD_REPETIDORRowDeletingEvent) Is Nothing) Then
                RaiseEvent REGISTRO_ESCOLARIDAD_REPETIDORRowDeleting(Me, New REGISTRO_ESCOLARIDAD_REPETIDORRowChangeEvent(CType(e.Row,REGISTRO_ESCOLARIDAD_REPETIDORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveREGISTRO_ESCOLARIDAD_REPETIDORRow(ByVal row As REGISTRO_ESCOLARIDAD_REPETIDORRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As registroEscolaridad = New registroEscolaridad()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REGISTRO_ESCOLARIDAD_REPETIDORDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DATOS_FIRMASDataTable
        Inherits Global.System.Data.TypedTableBase(Of DATOS_FIRMASRow)
        
        Private columnDirector1 As Global.System.Data.DataColumn
        
        Private columnResponsable1 As Global.System.Data.DataColumn
        
        Private columnFecha1 As Global.System.Data.DataColumn
        
        Private columnDirector2 As Global.System.Data.DataColumn
        
        Private columnResponsable2 As Global.System.Data.DataColumn
        
        Private columnFecha2 As Global.System.Data.DataColumn
        
        Private columnDirector3 As Global.System.Data.DataColumn
        
        Private columnResponsable3 As Global.System.Data.DataColumn
        
        Private columnFecha3 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DATOS_FIRMAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Director1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDirector1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Responsable1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResponsable1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Fecha1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Director2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDirector2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Responsable2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResponsable2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Fecha2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Director3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDirector3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Responsable3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResponsable3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Fecha3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DATOS_FIRMASRow
            Get
                Return CType(Me.Rows(index),DATOS_FIRMASRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DATOS_FIRMASRowChanging As DATOS_FIRMASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DATOS_FIRMASRowChanged As DATOS_FIRMASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DATOS_FIRMASRowDeleting As DATOS_FIRMASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DATOS_FIRMASRowDeleted As DATOS_FIRMASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDATOS_FIRMASRow(ByVal row As DATOS_FIRMASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDATOS_FIRMASRow(ByVal Director1 As String, ByVal Responsable1 As String, ByVal Fecha1 As Date, ByVal Director2 As String, ByVal Responsable2 As String, ByVal Fecha2 As Date, ByVal Director3 As String, ByVal Responsable3 As String, ByVal Fecha3 As Date) As DATOS_FIRMASRow
            Dim rowDATOS_FIRMASRow As DATOS_FIRMASRow = CType(Me.NewRow,DATOS_FIRMASRow)
            Dim columnValuesArray() As Object = New Object() {Director1, Responsable1, Fecha1, Director2, Responsable2, Fecha2, Director3, Responsable3, Fecha3}
            rowDATOS_FIRMASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDATOS_FIRMASRow)
            Return rowDATOS_FIRMASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DATOS_FIRMASDataTable = CType(MyBase.Clone,DATOS_FIRMASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DATOS_FIRMASDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDirector1 = MyBase.Columns("Director1")
            Me.columnResponsable1 = MyBase.Columns("Responsable1")
            Me.columnFecha1 = MyBase.Columns("Fecha1")
            Me.columnDirector2 = MyBase.Columns("Director2")
            Me.columnResponsable2 = MyBase.Columns("Responsable2")
            Me.columnFecha2 = MyBase.Columns("Fecha2")
            Me.columnDirector3 = MyBase.Columns("Director3")
            Me.columnResponsable3 = MyBase.Columns("Responsable3")
            Me.columnFecha3 = MyBase.Columns("Fecha3")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDirector1 = New Global.System.Data.DataColumn("Director1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDirector1)
            Me.columnResponsable1 = New Global.System.Data.DataColumn("Responsable1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResponsable1)
            Me.columnFecha1 = New Global.System.Data.DataColumn("Fecha1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha1)
            Me.columnDirector2 = New Global.System.Data.DataColumn("Director2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDirector2)
            Me.columnResponsable2 = New Global.System.Data.DataColumn("Responsable2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResponsable2)
            Me.columnFecha2 = New Global.System.Data.DataColumn("Fecha2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha2)
            Me.columnDirector3 = New Global.System.Data.DataColumn("Director3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDirector3)
            Me.columnResponsable3 = New Global.System.Data.DataColumn("Responsable3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResponsable3)
            Me.columnFecha3 = New Global.System.Data.DataColumn("Fecha3", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha3)
            Me.columnDirector1.MaxLength = 200
            Me.columnResponsable1.MaxLength = 200
            Me.columnFecha1.AllowDBNull = false
            Me.columnDirector2.MaxLength = 200
            Me.columnResponsable2.MaxLength = 200
            Me.columnFecha2.AllowDBNull = false
            Me.columnDirector3.MaxLength = 200
            Me.columnResponsable3.MaxLength = 200
            Me.columnFecha3.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDATOS_FIRMASRow() As DATOS_FIRMASRow
            Return CType(Me.NewRow,DATOS_FIRMASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DATOS_FIRMASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DATOS_FIRMASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DATOS_FIRMASRowChangedEvent) Is Nothing) Then
                RaiseEvent DATOS_FIRMASRowChanged(Me, New DATOS_FIRMASRowChangeEvent(CType(e.Row,DATOS_FIRMASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DATOS_FIRMASRowChangingEvent) Is Nothing) Then
                RaiseEvent DATOS_FIRMASRowChanging(Me, New DATOS_FIRMASRowChangeEvent(CType(e.Row,DATOS_FIRMASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DATOS_FIRMASRowDeletedEvent) Is Nothing) Then
                RaiseEvent DATOS_FIRMASRowDeleted(Me, New DATOS_FIRMASRowChangeEvent(CType(e.Row,DATOS_FIRMASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DATOS_FIRMASRowDeletingEvent) Is Nothing) Then
                RaiseEvent DATOS_FIRMASRowDeleting(Me, New DATOS_FIRMASRowChangeEvent(CType(e.Row,DATOS_FIRMASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDATOS_FIRMASRow(ByVal row As DATOS_FIRMASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As registroEscolaridad = New registroEscolaridad()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DATOS_FIRMASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_REGISTRODataTable
        Inherits Global.System.Data.TypedTableBase(Of REPORTE_REGISTRORow)
        
        Private columnidalumno As Global.System.Data.DataColumn
        
        Private columnidmateria As Global.System.Data.DataColumn
        
        Private columncalificacion As Global.System.Data.DataColumn
        
        Private columncalificacion2 As Global.System.Data.DataColumn
        
        Private columnreg_oport1 As Global.System.Data.DataColumn
        
        Private columnreg_oport2 As Global.System.Data.DataColumn
        
        Private columnreg_oport3 As Global.System.Data.DataColumn
        
        Private columnreg_oport4 As Global.System.Data.DataColumn
        
        Private columnreg_oport5 As Global.System.Data.DataColumn
        
        Private columnacred_act As Global.System.Data.DataColumn
        
        Private columnacred_no As Global.System.Data.DataColumn
        
        Private columnacred_ant As Global.System.Data.DataColumn
        
        Private columnidcampus As Global.System.Data.DataColumn
        
        Private columnidlicenciatura As Global.System.Data.DataColumn
        
        Private columnidespecialidad As Global.System.Data.DataColumn
        
        Private columnidsemestre As Global.System.Data.DataColumn
        
        Private columnidgrupo As Global.System.Data.DataColumn
        
        Private columnidcicloescolar As Global.System.Data.DataColumn
        
        Private columnreg_materia1 As Global.System.Data.DataColumn
        
        Private columnreg_materia2 As Global.System.Data.DataColumn
        
        Private columnreg_materia3 As Global.System.Data.DataColumn
        
        Private columnreg_materia4 As Global.System.Data.DataColumn
        
        Private columnreg_materia5 As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnAPELLIDO_PATERNO As Global.System.Data.DataColumn
        
        Private columnAPELLIDO_MATERNO As Global.System.Data.DataColumn
        
        Private columnCURP As Global.System.Data.DataColumn
        
        Private columnGENERO As Global.System.Data.DataColumn
        
        Private columnIDSTATUS As Global.System.Data.DataColumn
        
        Private columnMATERIA_NOMBRE As Global.System.Data.DataColumn
        
        Private columnCLAVEISENCO As Global.System.Data.DataColumn
        
        Private columntipocheck As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_REGISTRO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idalumnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidalumno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idmateriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidmateria
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property calificacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncalificacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property calificacion2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncalificacion2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_oport1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_oport1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_oport2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_oport2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_oport3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_oport3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_oport4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_oport4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_oport5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_oport5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acred_actColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacred_act
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acred_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacred_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acred_antColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacred_ant
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idcampusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidcampus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idlicenciaturaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidlicenciatura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idespecialidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidespecialidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idsemestreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidsemestre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idgrupoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidgrupo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idcicloescolarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidcicloescolar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_materia1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_materia1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_materia2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_materia2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_materia3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_materia3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_materia4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_materia4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_materia5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_materia5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDO_PATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO_PATERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDO_MATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO_MATERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CURPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GENEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATERIA_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATERIA_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLAVEISENCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLAVEISENCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tipocheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipocheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_REGISTRORow
            Get
                Return CType(Me.Rows(index),REPORTE_REGISTRORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REPORTE_REGISTRORowChanging As REPORTE_REGISTRORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REPORTE_REGISTRORowChanged As REPORTE_REGISTRORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REPORTE_REGISTRORowDeleting As REPORTE_REGISTRORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REPORTE_REGISTRORowDeleted As REPORTE_REGISTRORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddREPORTE_REGISTRORow(ByVal row As REPORTE_REGISTRORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddREPORTE_REGISTRORow( _
                    ByVal idalumno As Long,  _
                    ByVal idmateria As Long,  _
                    ByVal calificacion As Double,  _
                    ByVal calificacion2 As Double,  _
                    ByVal reg_oport1 As String,  _
                    ByVal reg_oport2 As String,  _
                    ByVal reg_oport3 As String,  _
                    ByVal reg_oport4 As String,  _
                    ByVal reg_oport5 As String,  _
                    ByVal acred_act As Integer,  _
                    ByVal acred_no As Integer,  _
                    ByVal acred_ant As Integer,  _
                    ByVal idcampus As String,  _
                    ByVal idlicenciatura As String,  _
                    ByVal idespecialidad As String,  _
                    ByVal idsemestre As Long,  _
                    ByVal idgrupo As String,  _
                    ByVal idcicloescolar As String,  _
                    ByVal reg_materia1 As String,  _
                    ByVal reg_materia2 As String,  _
                    ByVal reg_materia3 As String,  _
                    ByVal reg_materia4 As String,  _
                    ByVal reg_materia5 As String,  _
                    ByVal NOMBRE As String,  _
                    ByVal APELLIDO_PATERNO As String,  _
                    ByVal APELLIDO_MATERNO As String,  _
                    ByVal CURP As String,  _
                    ByVal GENERO As String,  _
                    ByVal IDSTATUS As String,  _
                    ByVal MATERIA_NOMBRE As String,  _
                    ByVal CLAVEISENCO As String,  _
                    ByVal tipocheck As Boolean) As REPORTE_REGISTRORow
            Dim rowREPORTE_REGISTRORow As REPORTE_REGISTRORow = CType(Me.NewRow,REPORTE_REGISTRORow)
            Dim columnValuesArray() As Object = New Object() {idalumno, idmateria, calificacion, calificacion2, reg_oport1, reg_oport2, reg_oport3, reg_oport4, reg_oport5, acred_act, acred_no, acred_ant, idcampus, idlicenciatura, idespecialidad, idsemestre, idgrupo, idcicloescolar, reg_materia1, reg_materia2, reg_materia3, reg_materia4, reg_materia5, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, CURP, GENERO, IDSTATUS, MATERIA_NOMBRE, CLAVEISENCO, tipocheck}
            rowREPORTE_REGISTRORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_REGISTRORow)
            Return rowREPORTE_REGISTRORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_REGISTRODataTable = CType(MyBase.Clone,REPORTE_REGISTRODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_REGISTRODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnidalumno = MyBase.Columns("idalumno")
            Me.columnidmateria = MyBase.Columns("idmateria")
            Me.columncalificacion = MyBase.Columns("calificacion")
            Me.columncalificacion2 = MyBase.Columns("calificacion2")
            Me.columnreg_oport1 = MyBase.Columns("reg_oport1")
            Me.columnreg_oport2 = MyBase.Columns("reg_oport2")
            Me.columnreg_oport3 = MyBase.Columns("reg_oport3")
            Me.columnreg_oport4 = MyBase.Columns("reg_oport4")
            Me.columnreg_oport5 = MyBase.Columns("reg_oport5")
            Me.columnacred_act = MyBase.Columns("acred_act")
            Me.columnacred_no = MyBase.Columns("acred_no")
            Me.columnacred_ant = MyBase.Columns("acred_ant")
            Me.columnidcampus = MyBase.Columns("idcampus")
            Me.columnidlicenciatura = MyBase.Columns("idlicenciatura")
            Me.columnidespecialidad = MyBase.Columns("idespecialidad")
            Me.columnidsemestre = MyBase.Columns("idsemestre")
            Me.columnidgrupo = MyBase.Columns("idgrupo")
            Me.columnidcicloescolar = MyBase.Columns("idcicloescolar")
            Me.columnreg_materia1 = MyBase.Columns("reg_materia1")
            Me.columnreg_materia2 = MyBase.Columns("reg_materia2")
            Me.columnreg_materia3 = MyBase.Columns("reg_materia3")
            Me.columnreg_materia4 = MyBase.Columns("reg_materia4")
            Me.columnreg_materia5 = MyBase.Columns("reg_materia5")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnAPELLIDO_PATERNO = MyBase.Columns("APELLIDO_PATERNO")
            Me.columnAPELLIDO_MATERNO = MyBase.Columns("APELLIDO_MATERNO")
            Me.columnCURP = MyBase.Columns("CURP")
            Me.columnGENERO = MyBase.Columns("GENERO")
            Me.columnIDSTATUS = MyBase.Columns("IDSTATUS")
            Me.columnMATERIA_NOMBRE = MyBase.Columns("MATERIA_NOMBRE")
            Me.columnCLAVEISENCO = MyBase.Columns("CLAVEISENCO")
            Me.columntipocheck = MyBase.Columns("tipocheck")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnidalumno = New Global.System.Data.DataColumn("idalumno", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidalumno)
            Me.columnidmateria = New Global.System.Data.DataColumn("idmateria", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidmateria)
            Me.columncalificacion = New Global.System.Data.DataColumn("calificacion", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncalificacion)
            Me.columncalificacion2 = New Global.System.Data.DataColumn("calificacion2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncalificacion2)
            Me.columnreg_oport1 = New Global.System.Data.DataColumn("reg_oport1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_oport1)
            Me.columnreg_oport2 = New Global.System.Data.DataColumn("reg_oport2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_oport2)
            Me.columnreg_oport3 = New Global.System.Data.DataColumn("reg_oport3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_oport3)
            Me.columnreg_oport4 = New Global.System.Data.DataColumn("reg_oport4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_oport4)
            Me.columnreg_oport5 = New Global.System.Data.DataColumn("reg_oport5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_oport5)
            Me.columnacred_act = New Global.System.Data.DataColumn("acred_act", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacred_act)
            Me.columnacred_no = New Global.System.Data.DataColumn("acred_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacred_no)
            Me.columnacred_ant = New Global.System.Data.DataColumn("acred_ant", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacred_ant)
            Me.columnidcampus = New Global.System.Data.DataColumn("idcampus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidcampus)
            Me.columnidlicenciatura = New Global.System.Data.DataColumn("idlicenciatura", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidlicenciatura)
            Me.columnidespecialidad = New Global.System.Data.DataColumn("idespecialidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidespecialidad)
            Me.columnidsemestre = New Global.System.Data.DataColumn("idsemestre", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidsemestre)
            Me.columnidgrupo = New Global.System.Data.DataColumn("idgrupo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidgrupo)
            Me.columnidcicloescolar = New Global.System.Data.DataColumn("idcicloescolar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidcicloescolar)
            Me.columnreg_materia1 = New Global.System.Data.DataColumn("reg_materia1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_materia1)
            Me.columnreg_materia2 = New Global.System.Data.DataColumn("reg_materia2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_materia2)
            Me.columnreg_materia3 = New Global.System.Data.DataColumn("reg_materia3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_materia3)
            Me.columnreg_materia4 = New Global.System.Data.DataColumn("reg_materia4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_materia4)
            Me.columnreg_materia5 = New Global.System.Data.DataColumn("reg_materia5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_materia5)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnAPELLIDO_PATERNO = New Global.System.Data.DataColumn("APELLIDO_PATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO_PATERNO)
            Me.columnAPELLIDO_MATERNO = New Global.System.Data.DataColumn("APELLIDO_MATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO_MATERNO)
            Me.columnCURP = New Global.System.Data.DataColumn("CURP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURP)
            Me.columnGENERO = New Global.System.Data.DataColumn("GENERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENERO)
            Me.columnIDSTATUS = New Global.System.Data.DataColumn("IDSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDSTATUS)
            Me.columnMATERIA_NOMBRE = New Global.System.Data.DataColumn("MATERIA_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATERIA_NOMBRE)
            Me.columnCLAVEISENCO = New Global.System.Data.DataColumn("CLAVEISENCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLAVEISENCO)
            Me.columntipocheck = New Global.System.Data.DataColumn("tipocheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipocheck)
            Me.columnidalumno.AllowDBNull = false
            Me.columnidmateria.AllowDBNull = false
            Me.columncalificacion.AllowDBNull = false
            Me.columncalificacion2.AllowDBNull = false
            Me.columnreg_oport1.MaxLength = 50
            Me.columnreg_oport2.MaxLength = 50
            Me.columnreg_oport3.MaxLength = 50
            Me.columnreg_oport4.MaxLength = 50
            Me.columnreg_oport5.MaxLength = 50
            Me.columnacred_act.AllowDBNull = false
            Me.columnacred_no.AllowDBNull = false
            Me.columnacred_ant.AllowDBNull = false
            Me.columnidcampus.AllowDBNull = false
            Me.columnidcampus.MaxLength = 50
            Me.columnidlicenciatura.AllowDBNull = false
            Me.columnidlicenciatura.MaxLength = 50
            Me.columnidespecialidad.AllowDBNull = false
            Me.columnidespecialidad.MaxLength = 50
            Me.columnidsemestre.AllowDBNull = false
            Me.columnidgrupo.AllowDBNull = false
            Me.columnidgrupo.MaxLength = 10
            Me.columnidcicloescolar.AllowDBNull = false
            Me.columnidcicloescolar.MaxLength = 10
            Me.columnreg_materia1.MaxLength = 50
            Me.columnreg_materia2.MaxLength = 50
            Me.columnreg_materia3.MaxLength = 50
            Me.columnreg_materia4.MaxLength = 50
            Me.columnreg_materia5.MaxLength = 50
            Me.columnNOMBRE.MaxLength = 255
            Me.columnAPELLIDO_PATERNO.MaxLength = 255
            Me.columnAPELLIDO_MATERNO.MaxLength = 255
            Me.columnCURP.MaxLength = 18
            Me.columnGENERO.MaxLength = 10
            Me.columnIDSTATUS.MaxLength = 50
            Me.columnMATERIA_NOMBRE.MaxLength = 255
            Me.columnCLAVEISENCO.MaxLength = 50
            Me.columntipocheck.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewREPORTE_REGISTRORow() As REPORTE_REGISTRORow
            Return CType(Me.NewRow,REPORTE_REGISTRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_REGISTRORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_REGISTRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_REGISTRORowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_REGISTRORowChanged(Me, New REPORTE_REGISTRORowChangeEvent(CType(e.Row,REPORTE_REGISTRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_REGISTRORowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_REGISTRORowChanging(Me, New REPORTE_REGISTRORowChangeEvent(CType(e.Row,REPORTE_REGISTRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_REGISTRORowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_REGISTRORowDeleted(Me, New REPORTE_REGISTRORowChangeEvent(CType(e.Row,REPORTE_REGISTRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_REGISTRORowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_REGISTRORowDeleting(Me, New REPORTE_REGISTRORowChangeEvent(CType(e.Row,REPORTE_REGISTRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveREPORTE_REGISTRORow(ByVal row As REPORTE_REGISTRORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As registroEscolaridad = New registroEscolaridad()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_REGISTRODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_REGISTRO_FUERADataTable
        Inherits Global.System.Data.TypedTableBase(Of REPORTE_REGISTRO_FUERARow)
        
        Private columnidalumno As Global.System.Data.DataColumn
        
        Private columnidmateria As Global.System.Data.DataColumn
        
        Private columncalificacion As Global.System.Data.DataColumn
        
        Private columncalificacion2 As Global.System.Data.DataColumn
        
        Private columnreg_oport1 As Global.System.Data.DataColumn
        
        Private columnreg_oport2 As Global.System.Data.DataColumn
        
        Private columnreg_oport3 As Global.System.Data.DataColumn
        
        Private columnreg_oport4 As Global.System.Data.DataColumn
        
        Private columnreg_oport5 As Global.System.Data.DataColumn
        
        Private columnacred_act As Global.System.Data.DataColumn
        
        Private columnacred_no As Global.System.Data.DataColumn
        
        Private columnacred_ant As Global.System.Data.DataColumn
        
        Private columnidcampus As Global.System.Data.DataColumn
        
        Private columnidlicenciatura As Global.System.Data.DataColumn
        
        Private columnidespecialidad As Global.System.Data.DataColumn
        
        Private columnidsemestre As Global.System.Data.DataColumn
        
        Private columnidgrupo As Global.System.Data.DataColumn
        
        Private columnidcicloescolar As Global.System.Data.DataColumn
        
        Private columnreg_materia1 As Global.System.Data.DataColumn
        
        Private columnreg_materia2 As Global.System.Data.DataColumn
        
        Private columnreg_materia3 As Global.System.Data.DataColumn
        
        Private columnreg_materia4 As Global.System.Data.DataColumn
        
        Private columnreg_materia5 As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnAPELLIDO_PATERNO As Global.System.Data.DataColumn
        
        Private columnAPELLIDO_MATERNO As Global.System.Data.DataColumn
        
        Private columnCURP As Global.System.Data.DataColumn
        
        Private columnGENERO As Global.System.Data.DataColumn
        
        Private columnIDSTATUS As Global.System.Data.DataColumn
        
        Private columnMATERIA_NOMBRE As Global.System.Data.DataColumn
        
        Private columnCLAVEISENCO As Global.System.Data.DataColumn
        
        Private columntipocheck As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_REGISTRO_FUERA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idalumnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidalumno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idmateriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidmateria
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property calificacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncalificacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property calificacion2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncalificacion2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_oport1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_oport1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_oport2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_oport2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_oport3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_oport3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_oport4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_oport4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_oport5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_oport5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acred_actColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacred_act
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acred_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacred_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acred_antColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacred_ant
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idcampusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidcampus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idlicenciaturaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidlicenciatura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idespecialidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidespecialidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idsemestreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidsemestre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idgrupoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidgrupo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idcicloescolarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidcicloescolar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_materia1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_materia1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_materia2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_materia2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_materia3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_materia3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_materia4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_materia4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reg_materia5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreg_materia5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDO_PATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO_PATERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDO_MATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO_MATERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CURPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GENEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATERIA_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATERIA_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLAVEISENCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLAVEISENCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tipocheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipocheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_REGISTRO_FUERARow
            Get
                Return CType(Me.Rows(index),REPORTE_REGISTRO_FUERARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REPORTE_REGISTRO_FUERARowChanging As REPORTE_REGISTRO_FUERARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REPORTE_REGISTRO_FUERARowChanged As REPORTE_REGISTRO_FUERARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REPORTE_REGISTRO_FUERARowDeleting As REPORTE_REGISTRO_FUERARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REPORTE_REGISTRO_FUERARowDeleted As REPORTE_REGISTRO_FUERARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddREPORTE_REGISTRO_FUERARow(ByVal row As REPORTE_REGISTRO_FUERARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddREPORTE_REGISTRO_FUERARow( _
                    ByVal idalumno As Long,  _
                    ByVal idmateria As Long,  _
                    ByVal calificacion As Double,  _
                    ByVal calificacion2 As Double,  _
                    ByVal reg_oport1 As String,  _
                    ByVal reg_oport2 As String,  _
                    ByVal reg_oport3 As String,  _
                    ByVal reg_oport4 As String,  _
                    ByVal reg_oport5 As String,  _
                    ByVal acred_act As Integer,  _
                    ByVal acred_no As Integer,  _
                    ByVal acred_ant As Integer,  _
                    ByVal idcampus As String,  _
                    ByVal idlicenciatura As String,  _
                    ByVal idespecialidad As String,  _
                    ByVal idsemestre As Long,  _
                    ByVal idgrupo As String,  _
                    ByVal idcicloescolar As String,  _
                    ByVal reg_materia1 As String,  _
                    ByVal reg_materia2 As String,  _
                    ByVal reg_materia3 As String,  _
                    ByVal reg_materia4 As String,  _
                    ByVal reg_materia5 As String,  _
                    ByVal NOMBRE As String,  _
                    ByVal APELLIDO_PATERNO As String,  _
                    ByVal APELLIDO_MATERNO As String,  _
                    ByVal CURP As String,  _
                    ByVal GENERO As String,  _
                    ByVal IDSTATUS As String,  _
                    ByVal MATERIA_NOMBRE As String,  _
                    ByVal CLAVEISENCO As String,  _
                    ByVal tipocheck As Boolean) As REPORTE_REGISTRO_FUERARow
            Dim rowREPORTE_REGISTRO_FUERARow As REPORTE_REGISTRO_FUERARow = CType(Me.NewRow,REPORTE_REGISTRO_FUERARow)
            Dim columnValuesArray() As Object = New Object() {idalumno, idmateria, calificacion, calificacion2, reg_oport1, reg_oport2, reg_oport3, reg_oport4, reg_oport5, acred_act, acred_no, acred_ant, idcampus, idlicenciatura, idespecialidad, idsemestre, idgrupo, idcicloescolar, reg_materia1, reg_materia2, reg_materia3, reg_materia4, reg_materia5, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, CURP, GENERO, IDSTATUS, MATERIA_NOMBRE, CLAVEISENCO, tipocheck}
            rowREPORTE_REGISTRO_FUERARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_REGISTRO_FUERARow)
            Return rowREPORTE_REGISTRO_FUERARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_REGISTRO_FUERADataTable = CType(MyBase.Clone,REPORTE_REGISTRO_FUERADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_REGISTRO_FUERADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnidalumno = MyBase.Columns("idalumno")
            Me.columnidmateria = MyBase.Columns("idmateria")
            Me.columncalificacion = MyBase.Columns("calificacion")
            Me.columncalificacion2 = MyBase.Columns("calificacion2")
            Me.columnreg_oport1 = MyBase.Columns("reg_oport1")
            Me.columnreg_oport2 = MyBase.Columns("reg_oport2")
            Me.columnreg_oport3 = MyBase.Columns("reg_oport3")
            Me.columnreg_oport4 = MyBase.Columns("reg_oport4")
            Me.columnreg_oport5 = MyBase.Columns("reg_oport5")
            Me.columnacred_act = MyBase.Columns("acred_act")
            Me.columnacred_no = MyBase.Columns("acred_no")
            Me.columnacred_ant = MyBase.Columns("acred_ant")
            Me.columnidcampus = MyBase.Columns("idcampus")
            Me.columnidlicenciatura = MyBase.Columns("idlicenciatura")
            Me.columnidespecialidad = MyBase.Columns("idespecialidad")
            Me.columnidsemestre = MyBase.Columns("idsemestre")
            Me.columnidgrupo = MyBase.Columns("idgrupo")
            Me.columnidcicloescolar = MyBase.Columns("idcicloescolar")
            Me.columnreg_materia1 = MyBase.Columns("reg_materia1")
            Me.columnreg_materia2 = MyBase.Columns("reg_materia2")
            Me.columnreg_materia3 = MyBase.Columns("reg_materia3")
            Me.columnreg_materia4 = MyBase.Columns("reg_materia4")
            Me.columnreg_materia5 = MyBase.Columns("reg_materia5")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnAPELLIDO_PATERNO = MyBase.Columns("APELLIDO_PATERNO")
            Me.columnAPELLIDO_MATERNO = MyBase.Columns("APELLIDO_MATERNO")
            Me.columnCURP = MyBase.Columns("CURP")
            Me.columnGENERO = MyBase.Columns("GENERO")
            Me.columnIDSTATUS = MyBase.Columns("IDSTATUS")
            Me.columnMATERIA_NOMBRE = MyBase.Columns("MATERIA_NOMBRE")
            Me.columnCLAVEISENCO = MyBase.Columns("CLAVEISENCO")
            Me.columntipocheck = MyBase.Columns("tipocheck")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnidalumno = New Global.System.Data.DataColumn("idalumno", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidalumno)
            Me.columnidmateria = New Global.System.Data.DataColumn("idmateria", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidmateria)
            Me.columncalificacion = New Global.System.Data.DataColumn("calificacion", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncalificacion)
            Me.columncalificacion2 = New Global.System.Data.DataColumn("calificacion2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncalificacion2)
            Me.columnreg_oport1 = New Global.System.Data.DataColumn("reg_oport1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_oport1)
            Me.columnreg_oport2 = New Global.System.Data.DataColumn("reg_oport2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_oport2)
            Me.columnreg_oport3 = New Global.System.Data.DataColumn("reg_oport3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_oport3)
            Me.columnreg_oport4 = New Global.System.Data.DataColumn("reg_oport4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_oport4)
            Me.columnreg_oport5 = New Global.System.Data.DataColumn("reg_oport5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_oport5)
            Me.columnacred_act = New Global.System.Data.DataColumn("acred_act", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacred_act)
            Me.columnacred_no = New Global.System.Data.DataColumn("acred_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacred_no)
            Me.columnacred_ant = New Global.System.Data.DataColumn("acred_ant", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacred_ant)
            Me.columnidcampus = New Global.System.Data.DataColumn("idcampus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidcampus)
            Me.columnidlicenciatura = New Global.System.Data.DataColumn("idlicenciatura", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidlicenciatura)
            Me.columnidespecialidad = New Global.System.Data.DataColumn("idespecialidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidespecialidad)
            Me.columnidsemestre = New Global.System.Data.DataColumn("idsemestre", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidsemestre)
            Me.columnidgrupo = New Global.System.Data.DataColumn("idgrupo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidgrupo)
            Me.columnidcicloescolar = New Global.System.Data.DataColumn("idcicloescolar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidcicloescolar)
            Me.columnreg_materia1 = New Global.System.Data.DataColumn("reg_materia1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_materia1)
            Me.columnreg_materia2 = New Global.System.Data.DataColumn("reg_materia2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_materia2)
            Me.columnreg_materia3 = New Global.System.Data.DataColumn("reg_materia3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_materia3)
            Me.columnreg_materia4 = New Global.System.Data.DataColumn("reg_materia4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_materia4)
            Me.columnreg_materia5 = New Global.System.Data.DataColumn("reg_materia5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreg_materia5)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnAPELLIDO_PATERNO = New Global.System.Data.DataColumn("APELLIDO_PATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO_PATERNO)
            Me.columnAPELLIDO_MATERNO = New Global.System.Data.DataColumn("APELLIDO_MATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO_MATERNO)
            Me.columnCURP = New Global.System.Data.DataColumn("CURP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURP)
            Me.columnGENERO = New Global.System.Data.DataColumn("GENERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENERO)
            Me.columnIDSTATUS = New Global.System.Data.DataColumn("IDSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDSTATUS)
            Me.columnMATERIA_NOMBRE = New Global.System.Data.DataColumn("MATERIA_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATERIA_NOMBRE)
            Me.columnCLAVEISENCO = New Global.System.Data.DataColumn("CLAVEISENCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLAVEISENCO)
            Me.columntipocheck = New Global.System.Data.DataColumn("tipocheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipocheck)
            Me.columnidalumno.AllowDBNull = false
            Me.columnidmateria.AllowDBNull = false
            Me.columncalificacion.AllowDBNull = false
            Me.columncalificacion2.AllowDBNull = false
            Me.columnreg_oport1.MaxLength = 50
            Me.columnreg_oport2.MaxLength = 50
            Me.columnreg_oport3.MaxLength = 50
            Me.columnreg_oport4.MaxLength = 50
            Me.columnreg_oport5.MaxLength = 50
            Me.columnacred_act.AllowDBNull = false
            Me.columnacred_no.AllowDBNull = false
            Me.columnacred_ant.AllowDBNull = false
            Me.columnidcampus.AllowDBNull = false
            Me.columnidcampus.MaxLength = 50
            Me.columnidlicenciatura.AllowDBNull = false
            Me.columnidlicenciatura.MaxLength = 50
            Me.columnidespecialidad.AllowDBNull = false
            Me.columnidespecialidad.MaxLength = 50
            Me.columnidsemestre.AllowDBNull = false
            Me.columnidgrupo.AllowDBNull = false
            Me.columnidgrupo.MaxLength = 10
            Me.columnidcicloescolar.AllowDBNull = false
            Me.columnidcicloescolar.MaxLength = 10
            Me.columnreg_materia1.MaxLength = 50
            Me.columnreg_materia2.MaxLength = 50
            Me.columnreg_materia3.MaxLength = 50
            Me.columnreg_materia4.MaxLength = 50
            Me.columnreg_materia5.MaxLength = 50
            Me.columnNOMBRE.MaxLength = 255
            Me.columnAPELLIDO_PATERNO.MaxLength = 255
            Me.columnAPELLIDO_MATERNO.MaxLength = 255
            Me.columnCURP.MaxLength = 18
            Me.columnGENERO.MaxLength = 10
            Me.columnIDSTATUS.MaxLength = 50
            Me.columnMATERIA_NOMBRE.MaxLength = 255
            Me.columnCLAVEISENCO.MaxLength = 50
            Me.columntipocheck.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewREPORTE_REGISTRO_FUERARow() As REPORTE_REGISTRO_FUERARow
            Return CType(Me.NewRow,REPORTE_REGISTRO_FUERARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_REGISTRO_FUERARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_REGISTRO_FUERARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_REGISTRO_FUERARowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_REGISTRO_FUERARowChanged(Me, New REPORTE_REGISTRO_FUERARowChangeEvent(CType(e.Row,REPORTE_REGISTRO_FUERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_REGISTRO_FUERARowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_REGISTRO_FUERARowChanging(Me, New REPORTE_REGISTRO_FUERARowChangeEvent(CType(e.Row,REPORTE_REGISTRO_FUERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_REGISTRO_FUERARowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_REGISTRO_FUERARowDeleted(Me, New REPORTE_REGISTRO_FUERARowChangeEvent(CType(e.Row,REPORTE_REGISTRO_FUERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_REGISTRO_FUERARowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_REGISTRO_FUERARowDeleting(Me, New REPORTE_REGISTRO_FUERARowChangeEvent(CType(e.Row,REPORTE_REGISTRO_FUERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveREPORTE_REGISTRO_FUERARow(ByVal row As REPORTE_REGISTRO_FUERARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As registroEscolaridad = New registroEscolaridad()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_REGISTRO_FUERADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REGISTRO_ESCOLARIDADRow
        Inherits Global.System.Data.DataRow
        
        Private tableREGISTRO_ESCOLARIDAD As REGISTRO_ESCOLARIDADDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREGISTRO_ESCOLARIDAD = CType(Me.Table,REGISTRO_ESCOLARIDADDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDO_PATERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.APELLIDO_PATERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APELLIDO_PATERNO' in table 'REGISTRO_ESCOLARIDAD' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.APELLIDO_PATERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDO_MATERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.APELLIDO_MATERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APELLIDO_MATERNO' in table 'REGISTRO_ESCOLARIDAD' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.APELLIDO_MATERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property materianombre() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.materianombreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'materianombre' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.materianombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acreditadas() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.acreditadasColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.acreditadasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property noacreditadas() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.noacreditadasColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.noacreditadasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property noacreditadasant() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.noacreditadasantColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.noacreditadasantColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDLICENCIATURA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.IDLICENCIATURAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDLICENCIATURA' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.IDLICENCIATURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDSEMESTRE() As String
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.IDSEMESTREColumn),String)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.IDSEMESTREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDGRUPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.IDGRUPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDGRUPO' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.IDGRUPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDESPECIALIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.IDESPECIALIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDESPECIALIDAD' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.IDESPECIALIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDMATERIA() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.IDMATERIAColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.IDMATERIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CALIFICACION() As Double
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.CALIFICACIONColumn),Double)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.CALIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property calificacion2() As Double
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.calificacion2Column),Double)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.calificacion2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CURP() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.CURPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURP' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.CURPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GENERO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.GENEROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GENERO' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.GENEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE_MATERIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.NOMBRE_MATERIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE_MATERIA' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.NOMBRE_MATERIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property claveisenco() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.claveisencoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'claveisenco' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.claveisencoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDCAMPUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.IDCAMPUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDCAMPUS' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.IDCAMPUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CARRERANOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.CARRERANOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CARRERANOMBRE' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.CARRERANOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDturno() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.IDturnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDturno' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.IDturnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property extra1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.extra1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'extra1' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.extra1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property extra2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.extra2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'extra2' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.extra2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property extra3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.extra3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'extra3' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.extra3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATRICULA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.MATRICULAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MATRICULA' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.MATRICULAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr1() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.Expr1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr1' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOCHECK() As Boolean
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.TIPOCHECKColumn),Boolean)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.TIPOCHECKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDALUMNO() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.IDALUMNOColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.IDALUMNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDCICLOESCOLAR() As String
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.IDCICLOESCOLARColumn),String)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.IDCICLOESCOLARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.IDSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDSTATUS' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.IDSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD.CSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CSTATUS' in table 'REGISTRO_ESCOLARIDAD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD.CSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDO_PATERNONull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.APELLIDO_PATERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDO_PATERNONull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.APELLIDO_PATERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDO_MATERNONull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.APELLIDO_MATERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDO_MATERNONull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.APELLIDO_MATERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaterianombreNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.materianombreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaterianombreNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.materianombreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDLICENCIATURANull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.IDLICENCIATURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDLICENCIATURANull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.IDLICENCIATURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDGRUPONull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.IDGRUPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDGRUPONull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.IDGRUPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDESPECIALIDADNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.IDESPECIALIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDESPECIALIDADNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.IDESPECIALIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCURPNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.CURPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCURPNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.CURPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGENERONull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.GENEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGENERONull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.GENEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRE_MATERIANull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.NOMBRE_MATERIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRE_MATERIANull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.NOMBRE_MATERIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclaveisencoNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.claveisencoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclaveisencoNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.claveisencoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDCAMPUSNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.IDCAMPUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDCAMPUSNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.IDCAMPUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCARRERANOMBRENull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.CARRERANOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCARRERANOMBRENull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.CARRERANOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDturnoNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.IDturnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDturnoNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.IDturnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isextra1Null() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.extra1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setextra1Null()
            Me(Me.tableREGISTRO_ESCOLARIDAD.extra1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isextra2Null() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.extra2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setextra2Null()
            Me(Me.tableREGISTRO_ESCOLARIDAD.extra2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isextra3Null() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.extra3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setextra3Null()
            Me(Me.tableREGISTRO_ESCOLARIDAD.extra3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATRICULANull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.MATRICULAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATRICULANull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.MATRICULAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr1Null()
            Me(Me.tableREGISTRO_ESCOLARIDAD.Expr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.IDSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDSTATUSNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.IDSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD.CSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCSTATUSNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD.CSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REGISTRO_ESCOLARIDAD_ANTERIORRow
        Inherits Global.System.Data.DataRow
        
        Private tableREGISTRO_ESCOLARIDAD_ANTERIOR As REGISTRO_ESCOLARIDAD_ANTERIORDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR = CType(Me.Table,REGISTRO_ESCOLARIDAD_ANTERIORDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDO_PATERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.APELLIDO_PATERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APELLIDO_PATERNO' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.APELLIDO_PATERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDO_MATERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.APELLIDO_MATERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APELLIDO_MATERNO' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.APELLIDO_MATERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property materianombre() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.materianombreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'materianombre' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.materianombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acreditadas() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.acreditadasColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.acreditadasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property noacreditadas() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.noacreditadasColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.noacreditadasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDLICENCIATURA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDLICENCIATURAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDLICENCIATURA' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDLICENCIATURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDSEMESTRE() As String
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDSEMESTREColumn),String)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDSEMESTREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDGRUPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDGRUPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDGRUPO' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDGRUPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDESPECIALIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDESPECIALIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDESPECIALIDAD' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDESPECIALIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDMATERIA() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDMATERIAColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDMATERIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CALIFICACION() As Double
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.CALIFICACIONColumn),Double)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.CALIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property calificacion2() As Double
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.calificacion2Column),Double)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.calificacion2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CURP() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.CURPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURP' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.CURPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GENERO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.GENEROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GENERO' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.GENEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE_MATERIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.NOMBRE_MATERIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE_MATERIA' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.NOMBRE_MATERIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property claveisenco() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.claveisencoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'claveisenco' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.claveisencoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDSTATUS' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDCAMPUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDCAMPUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDCAMPUS' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDCAMPUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CARRERANOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.CARRERANOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CARRERANOMBRE' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.CARRERANOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDturno() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDturnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDturno' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDturnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property extra1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.extra1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'extra1' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.extra1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property extra2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.extra2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'extra2' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.extra2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property extra3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.extra3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'extra3' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.extra3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATRICULA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.MATRICULAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MATRICULA' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.MATRICULAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property noacreditadasant() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.noacreditadasantColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.noacreditadasantColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr1() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.Expr1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr1' in table 'REGISTRO_ESCOLARIDAD_ANTERIOR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDALUMNO() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDALUMNOColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDALUMNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDCICLOESCOLAR() As String
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDCICLOESCOLARColumn),String)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDCICLOESCOLARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDO_PATERNONull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.APELLIDO_PATERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDO_PATERNONull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.APELLIDO_PATERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDO_MATERNONull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.APELLIDO_MATERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDO_MATERNONull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.APELLIDO_MATERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaterianombreNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.materianombreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaterianombreNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.materianombreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDLICENCIATURANull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDLICENCIATURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDLICENCIATURANull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDLICENCIATURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDGRUPONull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDGRUPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDGRUPONull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDGRUPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDESPECIALIDADNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDESPECIALIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDESPECIALIDADNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDESPECIALIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCURPNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.CURPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCURPNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.CURPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGENERONull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.GENEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGENERONull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.GENEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRE_MATERIANull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.NOMBRE_MATERIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRE_MATERIANull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.NOMBRE_MATERIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclaveisencoNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.claveisencoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclaveisencoNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.claveisencoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDSTATUSNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDCAMPUSNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDCAMPUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDCAMPUSNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDCAMPUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCARRERANOMBRENull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.CARRERANOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCARRERANOMBRENull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.CARRERANOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDturnoNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDturnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDturnoNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.IDturnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isextra1Null() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.extra1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setextra1Null()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.extra1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isextra2Null() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.extra2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setextra2Null()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.extra2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isextra3Null() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.extra3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setextra3Null()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.extra3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATRICULANull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.MATRICULAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATRICULANull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.MATRICULAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr1Null()
            Me(Me.tableREGISTRO_ESCOLARIDAD_ANTERIOR.Expr1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REGISTRO_ESCOLARIDAD_REPETIDORRow
        Inherits Global.System.Data.DataRow
        
        Private tableREGISTRO_ESCOLARIDAD_REPETIDOR As REGISTRO_ESCOLARIDAD_REPETIDORDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR = CType(Me.Table,REGISTRO_ESCOLARIDAD_REPETIDORDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDO_PATERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.APELLIDO_PATERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APELLIDO_PATERNO' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.APELLIDO_PATERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDO_MATERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.APELLIDO_MATERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APELLIDO_MATERNO' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.APELLIDO_MATERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property materianombre() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.materianombreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'materianombre' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.materianombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acreditadas() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.acreditadasColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.acreditadasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property noacreditadas() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.noacreditadasColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.noacreditadasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDLICENCIATURA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDLICENCIATURAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDLICENCIATURA' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDLICENCIATURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDSEMESTRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDSEMESTREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDSEMESTRE' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDSEMESTREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDGRUPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDGRUPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDGRUPO' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDGRUPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDESPECIALIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDESPECIALIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDESPECIALIDAD' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDESPECIALIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDMATERIA() As Long
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDMATERIAColumn),Long)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDMATERIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CALIFICACION() As Double
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.CALIFICACIONColumn),Double)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.CALIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property calificacion2() As Double
            Get
                Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.calificacion2Column),Double)
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.calificacion2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CURP() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.CURPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURP' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.CURPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GENERO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.GENEROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GENERO' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.GENEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE_MATERIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.NOMBRE_MATERIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE_MATERIA' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.NOMBRE_MATERIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property claveisenco() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.claveisencoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'claveisenco' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.claveisencoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDSTATUS' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDCAMPUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDCAMPUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDCAMPUS' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDCAMPUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CARRERANOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.CARRERANOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CARRERANOMBRE' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.CARRERANOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDturno() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDturnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDturno' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDturnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property extra1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.extra1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'extra1' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.extra1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property extra2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.extra2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'extra2' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.extra2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property extra3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.extra3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'extra3' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.extra3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATRICULA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.MATRICULAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MATRICULA' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.MATRICULAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr1() As String
            Get
                Try 
                    Return CType(Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.Expr1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr1' in table 'REGISTRO_ESCOLARIDAD_REPETIDOR' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDO_PATERNONull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.APELLIDO_PATERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDO_PATERNONull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.APELLIDO_PATERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDO_MATERNONull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.APELLIDO_MATERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDO_MATERNONull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.APELLIDO_MATERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaterianombreNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.materianombreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaterianombreNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.materianombreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDLICENCIATURANull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDLICENCIATURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDLICENCIATURANull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDLICENCIATURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDSEMESTRENull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDSEMESTREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDSEMESTRENull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDSEMESTREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDGRUPONull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDGRUPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDGRUPONull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDGRUPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDESPECIALIDADNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDESPECIALIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDESPECIALIDADNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDESPECIALIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCURPNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.CURPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCURPNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.CURPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGENERONull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.GENEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGENERONull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.GENEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRE_MATERIANull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.NOMBRE_MATERIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRE_MATERIANull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.NOMBRE_MATERIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclaveisencoNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.claveisencoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclaveisencoNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.claveisencoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDSTATUSNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDCAMPUSNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDCAMPUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDCAMPUSNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDCAMPUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCARRERANOMBRENull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.CARRERANOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCARRERANOMBRENull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.CARRERANOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDturnoNull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDturnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDturnoNull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.IDturnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isextra1Null() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.extra1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setextra1Null()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.extra1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isextra2Null() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.extra2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setextra2Null()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.extra2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isextra3Null() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.extra3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setextra3Null()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.extra3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATRICULANull() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.MATRICULAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATRICULANull()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.MATRICULAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr1Null()
            Me(Me.tableREGISTRO_ESCOLARIDAD_REPETIDOR.Expr1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DATOS_FIRMASRow
        Inherits Global.System.Data.DataRow
        
        Private tableDATOS_FIRMAS As DATOS_FIRMASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDATOS_FIRMAS = CType(Me.Table,DATOS_FIRMASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Director1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_FIRMAS.Director1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Director1' in table 'DATOS_FIRMAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_FIRMAS.Director1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Responsable1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_FIRMAS.Responsable1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Responsable1' in table 'DATOS_FIRMAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_FIRMAS.Responsable1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fecha1() As Date
            Get
                Return CType(Me(Me.tableDATOS_FIRMAS.Fecha1Column),Date)
            End Get
            Set
                Me(Me.tableDATOS_FIRMAS.Fecha1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Director2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_FIRMAS.Director2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Director2' in table 'DATOS_FIRMAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_FIRMAS.Director2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Responsable2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_FIRMAS.Responsable2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Responsable2' in table 'DATOS_FIRMAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_FIRMAS.Responsable2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fecha2() As Date
            Get
                Return CType(Me(Me.tableDATOS_FIRMAS.Fecha2Column),Date)
            End Get
            Set
                Me(Me.tableDATOS_FIRMAS.Fecha2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Director3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_FIRMAS.Director3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Director3' in table 'DATOS_FIRMAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_FIRMAS.Director3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Responsable3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_FIRMAS.Responsable3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Responsable3' in table 'DATOS_FIRMAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_FIRMAS.Responsable3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fecha3() As Date
            Get
                Return CType(Me(Me.tableDATOS_FIRMAS.Fecha3Column),Date)
            End Get
            Set
                Me(Me.tableDATOS_FIRMAS.Fecha3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDirector1Null() As Boolean
            Return Me.IsNull(Me.tableDATOS_FIRMAS.Director1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDirector1Null()
            Me(Me.tableDATOS_FIRMAS.Director1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResponsable1Null() As Boolean
            Return Me.IsNull(Me.tableDATOS_FIRMAS.Responsable1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResponsable1Null()
            Me(Me.tableDATOS_FIRMAS.Responsable1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDirector2Null() As Boolean
            Return Me.IsNull(Me.tableDATOS_FIRMAS.Director2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDirector2Null()
            Me(Me.tableDATOS_FIRMAS.Director2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResponsable2Null() As Boolean
            Return Me.IsNull(Me.tableDATOS_FIRMAS.Responsable2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResponsable2Null()
            Me(Me.tableDATOS_FIRMAS.Responsable2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDirector3Null() As Boolean
            Return Me.IsNull(Me.tableDATOS_FIRMAS.Director3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDirector3Null()
            Me(Me.tableDATOS_FIRMAS.Director3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResponsable3Null() As Boolean
            Return Me.IsNull(Me.tableDATOS_FIRMAS.Responsable3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResponsable3Null()
            Me(Me.tableDATOS_FIRMAS.Responsable3Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REPORTE_REGISTRORow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_REGISTRO As REPORTE_REGISTRODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_REGISTRO = CType(Me.Table,REPORTE_REGISTRODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idalumno() As Long
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.idalumnoColumn),Long)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.idalumnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idmateria() As Long
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.idmateriaColumn),Long)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.idmateriaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property calificacion() As Double
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.calificacionColumn),Double)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.calificacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property calificacion2() As Double
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.calificacion2Column),Double)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.calificacion2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_oport1() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.reg_oport1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_oport1' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.reg_oport1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_oport2() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.reg_oport2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_oport2' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.reg_oport2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_oport3() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.reg_oport3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_oport3' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.reg_oport3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_oport4() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.reg_oport4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_oport4' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.reg_oport4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_oport5() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.reg_oport5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_oport5' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.reg_oport5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acred_act() As Integer
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.acred_actColumn),Integer)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.acred_actColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acred_no() As Integer
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.acred_noColumn),Integer)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.acred_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acred_ant() As Integer
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.acred_antColumn),Integer)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.acred_antColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idcampus() As String
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.idcampusColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.idcampusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idlicenciatura() As String
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.idlicenciaturaColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.idlicenciaturaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idespecialidad() As String
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.idespecialidadColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.idespecialidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idsemestre() As Long
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.idsemestreColumn),Long)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.idsemestreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idgrupo() As String
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.idgrupoColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.idgrupoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idcicloescolar() As String
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.idcicloescolarColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.idcicloescolarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_materia1() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.reg_materia1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_materia1' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.reg_materia1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_materia2() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.reg_materia2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_materia2' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.reg_materia2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_materia3() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.reg_materia3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_materia3' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.reg_materia3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_materia4() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.reg_materia4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_materia4' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.reg_materia4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_materia5() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.reg_materia5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_materia5' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.reg_materia5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDO_PATERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.APELLIDO_PATERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APELLIDO_PATERNO' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.APELLIDO_PATERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDO_MATERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.APELLIDO_MATERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APELLIDO_MATERNO' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.APELLIDO_MATERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CURP() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.CURPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURP' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.CURPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GENERO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.GENEROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GENERO' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.GENEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.IDSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDSTATUS' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.IDSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATERIA_NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.MATERIA_NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MATERIA_NOMBRE' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.MATERIA_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLAVEISENCO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO.CLAVEISENCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLAVEISENCO' in table 'REPORTE_REGISTRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.CLAVEISENCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tipocheck() As Boolean
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO.tipocheckColumn),Boolean)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO.tipocheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_oport1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.reg_oport1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_oport1Null()
            Me(Me.tableREPORTE_REGISTRO.reg_oport1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_oport2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.reg_oport2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_oport2Null()
            Me(Me.tableREPORTE_REGISTRO.reg_oport2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_oport3Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.reg_oport3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_oport3Null()
            Me(Me.tableREPORTE_REGISTRO.reg_oport3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_oport4Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.reg_oport4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_oport4Null()
            Me(Me.tableREPORTE_REGISTRO.reg_oport4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_oport5Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.reg_oport5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_oport5Null()
            Me(Me.tableREPORTE_REGISTRO.reg_oport5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_materia1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.reg_materia1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_materia1Null()
            Me(Me.tableREPORTE_REGISTRO.reg_materia1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_materia2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.reg_materia2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_materia2Null()
            Me(Me.tableREPORTE_REGISTRO.reg_materia2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_materia3Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.reg_materia3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_materia3Null()
            Me(Me.tableREPORTE_REGISTRO.reg_materia3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_materia4Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.reg_materia4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_materia4Null()
            Me(Me.tableREPORTE_REGISTRO.reg_materia4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_materia5Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.reg_materia5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_materia5Null()
            Me(Me.tableREPORTE_REGISTRO.reg_materia5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableREPORTE_REGISTRO.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDO_PATERNONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.APELLIDO_PATERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDO_PATERNONull()
            Me(Me.tableREPORTE_REGISTRO.APELLIDO_PATERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDO_MATERNONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.APELLIDO_MATERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDO_MATERNONull()
            Me(Me.tableREPORTE_REGISTRO.APELLIDO_MATERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCURPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.CURPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCURPNull()
            Me(Me.tableREPORTE_REGISTRO.CURPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGENERONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.GENEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGENERONull()
            Me(Me.tableREPORTE_REGISTRO.GENEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.IDSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDSTATUSNull()
            Me(Me.tableREPORTE_REGISTRO.IDSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATERIA_NOMBRENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.MATERIA_NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATERIA_NOMBRENull()
            Me(Me.tableREPORTE_REGISTRO.MATERIA_NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLAVEISENCONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO.CLAVEISENCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLAVEISENCONull()
            Me(Me.tableREPORTE_REGISTRO.CLAVEISENCOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REPORTE_REGISTRO_FUERARow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_REGISTRO_FUERA As REPORTE_REGISTRO_FUERADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_REGISTRO_FUERA = CType(Me.Table,REPORTE_REGISTRO_FUERADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idalumno() As Long
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.idalumnoColumn),Long)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.idalumnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idmateria() As Long
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.idmateriaColumn),Long)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.idmateriaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property calificacion() As Double
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.calificacionColumn),Double)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.calificacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property calificacion2() As Double
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.calificacion2Column),Double)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.calificacion2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_oport1() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_oport1' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_oport2() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_oport2' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_oport3() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_oport3' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_oport4() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_oport4' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_oport5() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_oport5' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acred_act() As Integer
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.acred_actColumn),Integer)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.acred_actColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acred_no() As Integer
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.acred_noColumn),Integer)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.acred_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acred_ant() As Integer
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.acred_antColumn),Integer)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.acred_antColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idcampus() As String
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.idcampusColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.idcampusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idlicenciatura() As String
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.idlicenciaturaColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.idlicenciaturaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idespecialidad() As String
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.idespecialidadColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.idespecialidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idsemestre() As Long
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.idsemestreColumn),Long)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.idsemestreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idgrupo() As String
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.idgrupoColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.idgrupoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idcicloescolar() As String
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.idcicloescolarColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.idcicloescolarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_materia1() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_materia1' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_materia2() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_materia2' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_materia3() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_materia3' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_materia4() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_materia4' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reg_materia5() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reg_materia5' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDO_PATERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.APELLIDO_PATERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APELLIDO_PATERNO' in table 'REPORTE_REGISTRO_FUERA' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.APELLIDO_PATERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDO_MATERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.APELLIDO_MATERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APELLIDO_MATERNO' in table 'REPORTE_REGISTRO_FUERA' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.APELLIDO_MATERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CURP() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.CURPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURP' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.CURPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GENERO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.GENEROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GENERO' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.GENEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.IDSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDSTATUS' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.IDSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATERIA_NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.MATERIA_NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MATERIA_NOMBRE' in table 'REPORTE_REGISTRO_FUERA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.MATERIA_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLAVEISENCO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.CLAVEISENCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLAVEISENCO' in table 'REPORTE_REGISTRO_FUERA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.CLAVEISENCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tipocheck() As Boolean
            Get
                Return CType(Me(Me.tableREPORTE_REGISTRO_FUERA.tipocheckColumn),Boolean)
            End Get
            Set
                Me(Me.tableREPORTE_REGISTRO_FUERA.tipocheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_oport1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.reg_oport1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_oport1Null()
            Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_oport2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.reg_oport2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_oport2Null()
            Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_oport3Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.reg_oport3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_oport3Null()
            Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_oport4Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.reg_oport4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_oport4Null()
            Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_oport5Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.reg_oport5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_oport5Null()
            Me(Me.tableREPORTE_REGISTRO_FUERA.reg_oport5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_materia1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.reg_materia1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_materia1Null()
            Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_materia2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.reg_materia2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_materia2Null()
            Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_materia3Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.reg_materia3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_materia3Null()
            Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_materia4Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.reg_materia4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_materia4Null()
            Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreg_materia5Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.reg_materia5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreg_materia5Null()
            Me(Me.tableREPORTE_REGISTRO_FUERA.reg_materia5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableREPORTE_REGISTRO_FUERA.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDO_PATERNONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.APELLIDO_PATERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDO_PATERNONull()
            Me(Me.tableREPORTE_REGISTRO_FUERA.APELLIDO_PATERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDO_MATERNONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.APELLIDO_MATERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDO_MATERNONull()
            Me(Me.tableREPORTE_REGISTRO_FUERA.APELLIDO_MATERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCURPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.CURPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCURPNull()
            Me(Me.tableREPORTE_REGISTRO_FUERA.CURPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGENERONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.GENEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGENERONull()
            Me(Me.tableREPORTE_REGISTRO_FUERA.GENEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.IDSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDSTATUSNull()
            Me(Me.tableREPORTE_REGISTRO_FUERA.IDSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATERIA_NOMBRENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.MATERIA_NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATERIA_NOMBRENull()
            Me(Me.tableREPORTE_REGISTRO_FUERA.MATERIA_NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLAVEISENCONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_REGISTRO_FUERA.CLAVEISENCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLAVEISENCONull()
            Me(Me.tableREPORTE_REGISTRO_FUERA.CLAVEISENCOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class REGISTRO_ESCOLARIDADRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REGISTRO_ESCOLARIDADRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As REGISTRO_ESCOLARIDADRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As REGISTRO_ESCOLARIDADRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class REGISTRO_ESCOLARIDAD_ANTERIORRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REGISTRO_ESCOLARIDAD_ANTERIORRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As REGISTRO_ESCOLARIDAD_ANTERIORRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As REGISTRO_ESCOLARIDAD_ANTERIORRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class REGISTRO_ESCOLARIDAD_REPETIDORRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REGISTRO_ESCOLARIDAD_REPETIDORRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As REGISTRO_ESCOLARIDAD_REPETIDORRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As REGISTRO_ESCOLARIDAD_REPETIDORRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DATOS_FIRMASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DATOS_FIRMASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DATOS_FIRMASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DATOS_FIRMASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class REPORTE_REGISTRORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_REGISTRORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As REPORTE_REGISTRORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As REPORTE_REGISTRORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class REPORTE_REGISTRO_FUERARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_REGISTRO_FUERARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As REPORTE_REGISTRO_FUERARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As REPORTE_REGISTRO_FUERARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace registroEscolaridadTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REGISTRO_ESCOLARIDADTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REGISTRO_ESCOLARIDAD"
            tableMapping.ColumnMappings.Add("APELLIDO_PATERNO", "APELLIDO_PATERNO")
            tableMapping.ColumnMappings.Add("APELLIDO_MATERNO", "APELLIDO_MATERNO")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("materianombre", "materianombre")
            tableMapping.ColumnMappings.Add("acreditadas", "acreditadas")
            tableMapping.ColumnMappings.Add("noacreditadas", "noacreditadas")
            tableMapping.ColumnMappings.Add("noacreditadasant", "noacreditadasant")
            tableMapping.ColumnMappings.Add("IDLICENCIATURA", "IDLICENCIATURA")
            tableMapping.ColumnMappings.Add("IDSEMESTRE", "IDSEMESTRE")
            tableMapping.ColumnMappings.Add("IDGRUPO", "IDGRUPO")
            tableMapping.ColumnMappings.Add("IDESPECIALIDAD", "IDESPECIALIDAD")
            tableMapping.ColumnMappings.Add("IDMATERIA", "IDMATERIA")
            tableMapping.ColumnMappings.Add("CALIFICACION", "CALIFICACION")
            tableMapping.ColumnMappings.Add("calificacion2", "calificacion2")
            tableMapping.ColumnMappings.Add("CURP", "CURP")
            tableMapping.ColumnMappings.Add("GENERO", "GENERO")
            tableMapping.ColumnMappings.Add("NOMBRE_MATERIA", "NOMBRE_MATERIA")
            tableMapping.ColumnMappings.Add("claveisenco", "claveisenco")
            tableMapping.ColumnMappings.Add("IDCAMPUS", "IDCAMPUS")
            tableMapping.ColumnMappings.Add("CARRERANOMBRE", "CARRERANOMBRE")
            tableMapping.ColumnMappings.Add("IDturno", "IDturno")
            tableMapping.ColumnMappings.Add("extra1", "extra1")
            tableMapping.ColumnMappings.Add("extra2", "extra2")
            tableMapping.ColumnMappings.Add("extra3", "extra3")
            tableMapping.ColumnMappings.Add("MATRICULA", "MATRICULA")
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            tableMapping.ColumnMappings.Add("TIPOCHECK", "TIPOCHECK")
            tableMapping.ColumnMappings.Add("IDALUMNO", "IDALUMNO")
            tableMapping.ColumnMappings.Add("IDCICLOESCOLAR", "IDCICLOESCOLAR")
            tableMapping.ColumnMappings.Add("IDSTATUS", "IDSTATUS")
            tableMapping.ColumnMappings.Add("CSTATUS", "CSTATUS")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.catalogosIsenco.My.MySettings.Default.ISENCOConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT C.IDCICLOESCOLAR, A.IDALUMNO, sc.descripcion AS CSTATUS, A.MATRICULA, A.AP"& _ 
                "ELLIDO_PATERNO, A.APELLIDO_MATERNO, A.NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  M.NOMBRE AS ma"& _ 
                "terianombre, C.acreditadas, C.noacreditadas, C.noacreditadasant, A.IDLICENCIATUR"& _ 
                "A, C.IDSEMESTRE, A.IDGRUPO, A.IDESPECIALIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  A.MATRICULA AS"& _ 
                " Expr1, C.IDMATERIA, C.CALIFICACION, C.calificacion2, A.CURP, A.GENERO, M.NOMBRE"& _ 
                " AS NOMBRE_MATERIA, M.CLAVEISENCO AS claveisenco, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  A.IDSTATUS"& _ 
                ", A.IDCAMPUS, A.IDLICENCIATURA AS CARRERANOMBRE, A.IDturno, ISNULL(C.extra1, '0'"& _ 
                ") AS extra1, ISNULL(C.extra2, '0') AS extra2, ISNULL(C.extra3, '0') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "        AS extra3, M.TIPOCHECK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     alumno AS A INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "   calificaciones AS C ON A.MATRICULA = C.Matricula INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "  materias AS M ON C.IDMATERIA = M.IDMATERIA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  statu"& _ 
                "s_calificaciones AS sc ON sc.id = C.idStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (A.IDESPECIALIDAD = @IDESPE"& _ 
                "CIALIDAD) AND (C.IDSEMESTRE = @IDSEMESTRE) AND (C.IDGRUPO = @IDGRUPO) AND (A.IDC"& _ 
                "AMPUS = @IDCAMPUS) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  (A.IDLICENCIATURA = @IDLICENCIATURA) "& _ 
                "AND (A.IDMODALIDAD = @IDMODALIDAD) AND (NOT (M.NOMBRE LIKE '%optativa%')) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                  (C.IDLICENCIATURA = @idlicenciatura2) AND (C.IDCICLOESCOLAR = "& _ 
                "@CICLOESCOLAR) AND (M.NOMBRE <> 'TALLER COMPLEMENTARIO')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY A.IDALUMNO, A"& _ 
                ".NOMBRE, A.APELLIDO_PATERNO, A.APELLIDO_MATERNO, M.NOMBRE, A.IDLICENCIATURA, C.I"& _ 
                "DSEMESTRE, A.IDGRUPO, A.IDESPECIALIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  A.IDturno, A.MATRICU"& _ 
                "LA, C.IDMATERIA, C.CALIFICACION, C.calificacion2, A.CURP, A.GENERO, M.NOMBRE, M."& _ 
                "CLAVEISENCO, A.IDSTATUS, A.IDCAMPUS, A.IDturno, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  A.IDLICENCIA"& _ 
                "TURA, A.IDSTATUS, C.extra1, C.extra2, C.extra3, C.acreditadas, C.noacreditadas, "& _ 
                "C.noacreditadasant, M.TIPOCHECK, C.IDCICLOESCOLAR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  sc.descri"& _ 
                "pcion"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY A.APELLIDO_PATERNO, A.APELLIDO_MATERNO, A.NOMBRE, M.TIPOCHECK DE"& _ 
                "SC, C.IDMATERIA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDESPECIALIDAD", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "IDESPECIALIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDSEMESTRE", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IDSEMESTRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDGRUPO", Global.System.Data.SqlDbType.VarChar, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IDGRUPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCAMPUS", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCAMPUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDLICENCIATURA", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "IDLICENCIATURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDMODALIDAD", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IDMODALIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idlicenciatura2", Global.System.Data.SqlDbType.[Decimal], 5, Global.System.Data.ParameterDirection.Input, 3, 0, "IDLICENCIATURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CICLOESCOLAR", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCICLOESCOLAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As registroEscolaridad.REGISTRO_ESCOLARIDADDataTable, ByVal IDESPECIALIDAD As String, ByVal IDSEMESTRE As String, ByVal IDGRUPO As String, ByVal IDCAMPUS As String, ByVal IDLICENCIATURA As String, ByVal IDMODALIDAD As String, ByVal idlicenciatura2 As Decimal, ByVal CICLOESCOLAR As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IDESPECIALIDAD Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDESPECIALIDAD,String)
            End If
            If (IDSEMESTRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDSEMESTRE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IDSEMESTRE,String)
            End If
            If (IDGRUPO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDGRUPO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IDGRUPO,String)
            End If
            If (IDCAMPUS Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(IDCAMPUS,String)
            End If
            If (IDLICENCIATURA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(IDLICENCIATURA,String)
            End If
            If (IDMODALIDAD Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(IDMODALIDAD,String)
            End If
            Me.Adapter.SelectCommand.Parameters(6).Value = CType(idlicenciatura2,Decimal)
            If (CICLOESCOLAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CICLOESCOLAR")
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(CICLOESCOLAR,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IDESPECIALIDAD As String, ByVal IDSEMESTRE As String, ByVal IDGRUPO As String, ByVal IDCAMPUS As String, ByVal IDLICENCIATURA As String, ByVal IDMODALIDAD As String, ByVal idlicenciatura2 As Decimal, ByVal CICLOESCOLAR As String) As registroEscolaridad.REGISTRO_ESCOLARIDADDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IDESPECIALIDAD Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDESPECIALIDAD,String)
            End If
            If (IDSEMESTRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDSEMESTRE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IDSEMESTRE,String)
            End If
            If (IDGRUPO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDGRUPO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IDGRUPO,String)
            End If
            If (IDCAMPUS Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(IDCAMPUS,String)
            End If
            If (IDLICENCIATURA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(IDLICENCIATURA,String)
            End If
            If (IDMODALIDAD Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(IDMODALIDAD,String)
            End If
            Me.Adapter.SelectCommand.Parameters(6).Value = CType(idlicenciatura2,Decimal)
            If (CICLOESCOLAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CICLOESCOLAR")
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(CICLOESCOLAR,String)
            End If
            Dim dataTable As registroEscolaridad.REGISTRO_ESCOLARIDADDataTable = New registroEscolaridad.REGISTRO_ESCOLARIDADDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REGISTRO_ESCOLARIDAD_ANTERIORTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REGISTRO_ESCOLARIDAD_ANTERIOR"
            tableMapping.ColumnMappings.Add("APELLIDO_PATERNO", "APELLIDO_PATERNO")
            tableMapping.ColumnMappings.Add("APELLIDO_MATERNO", "APELLIDO_MATERNO")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("materianombre", "materianombre")
            tableMapping.ColumnMappings.Add("acreditadas", "acreditadas")
            tableMapping.ColumnMappings.Add("noacreditadas", "noacreditadas")
            tableMapping.ColumnMappings.Add("IDLICENCIATURA", "IDLICENCIATURA")
            tableMapping.ColumnMappings.Add("IDSEMESTRE", "IDSEMESTRE")
            tableMapping.ColumnMappings.Add("IDGRUPO", "IDGRUPO")
            tableMapping.ColumnMappings.Add("IDESPECIALIDAD", "IDESPECIALIDAD")
            tableMapping.ColumnMappings.Add("IDMATERIA", "IDMATERIA")
            tableMapping.ColumnMappings.Add("CALIFICACION", "CALIFICACION")
            tableMapping.ColumnMappings.Add("calificacion2", "calificacion2")
            tableMapping.ColumnMappings.Add("CURP", "CURP")
            tableMapping.ColumnMappings.Add("GENERO", "GENERO")
            tableMapping.ColumnMappings.Add("NOMBRE_MATERIA", "NOMBRE_MATERIA")
            tableMapping.ColumnMappings.Add("claveisenco", "claveisenco")
            tableMapping.ColumnMappings.Add("IDSTATUS", "IDSTATUS")
            tableMapping.ColumnMappings.Add("IDCAMPUS", "IDCAMPUS")
            tableMapping.ColumnMappings.Add("CARRERANOMBRE", "CARRERANOMBRE")
            tableMapping.ColumnMappings.Add("IDturno", "IDturno")
            tableMapping.ColumnMappings.Add("extra1", "extra1")
            tableMapping.ColumnMappings.Add("extra2", "extra2")
            tableMapping.ColumnMappings.Add("extra3", "extra3")
            tableMapping.ColumnMappings.Add("MATRICULA", "MATRICULA")
            tableMapping.ColumnMappings.Add("noacreditadasant", "noacreditadasant")
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            tableMapping.ColumnMappings.Add("IDALUMNO", "IDALUMNO")
            tableMapping.ColumnMappings.Add("IDCICLOESCOLAR", "IDCICLOESCOLAR")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.catalogosIsenco.My.MySettings.Default.ISENCOConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT C.IDCICLOESCOLAR, A.IDALUMNO, A.MATRICULA, A.APELLIDO_PATERNO, A.APELLIDO_"& _ 
                "MATERNO, A.NOMBRE, M.NOMBRE AS materianombre, C.acreditadas, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                " C.noacreditadas, C.noacreditadasant, A.IDLICENCIATURA, C.IDSEMESTRE, A.IDGRUPO,"& _ 
                " A.IDESPECIALIDAD, A.MATRICULA AS Expr1, C.IDMATERIA, C.CALIFICACION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "          C.calificacion2, A.CURP, A.GENERO, M.NOMBRE AS NOMBRE_MATERIA, M.CLAVE"& _ 
                "ISENCO AS claveisenco, A.IDSTATUS, A.IDCAMPUS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  A.IDLICENCIAT"& _ 
                "URA AS CARRERANOMBRE, A.IDturno, ISNULL(C.extra1, '0') AS extra1, ISNULL(C.extra"& _ 
                "2, '0') AS extra2, ISNULL(C.extra3, '0') AS extra3"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     alumno AS A INNER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  calificaciones AS C ON A.MATRICULA = C.Matricula INNER JO"& _ 
                "IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  materias AS M ON C.IDMATERIA = M.IDMATERIA "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (A.IDE"& _ 
                "SPECIALIDAD = @IDESPECIALIDAD) AND (C.IDSEMESTRE = @IDSEMESTRE) AND (C.IDGRUPO ="& _ 
                " @IDGRUPO) AND (A.IDCAMPUS = @IDCAMPUS) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  (A.IDLICENCIATUR"& _ 
                "A = @IDLICENCIATURA) AND (A.IDMODALIDAD = @IDMODALIDAD) AND (NOT (M.NOMBRE LIKE "& _ 
                "'%optativa%')) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  (C.IDLICENCIATURA = @idlicenciatura2) AND"& _ 
                " (C.IDCICLOESCOLAR = @CICLOESCOLAR) AND (M.NOMBRE <> 'TALLER COMPLEMENTARIO')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"G"& _ 
                "ROUP BY A.IDALUMNO, A.NOMBRE, A.APELLIDO_PATERNO, A.APELLIDO_MATERNO, M.NOMBRE, "& _ 
                "A.IDLICENCIATURA, C.IDSEMESTRE, A.IDGRUPO, A.IDESPECIALIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                " A.IDturno, A.MATRICULA, C.IDMATERIA, C.CALIFICACION, C.calificacion2, A.CURP, A"& _ 
                ".GENERO, M.NOMBRE, M.CLAVEISENCO, A.IDSTATUS, A.IDCAMPUS, A.IDturno, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "         A.IDLICENCIATURA, A.IDSTATUS, C.extra1, C.extra2, C.extra3, C.acreditad"& _ 
                "as, C.noacreditadas, C.noacreditadasant, M.TIPOCHECK, C.IDCICLOESCOLAR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY"& _ 
                " A.APELLIDO_PATERNO, A.APELLIDO_MATERNO, A.NOMBRE, M.TIPOCHECK DESC, C.IDMATERIA"& _ 
                ""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDESPECIALIDAD", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "IDESPECIALIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDSEMESTRE", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IDSEMESTRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDGRUPO", Global.System.Data.SqlDbType.VarChar, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IDGRUPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCAMPUS", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCAMPUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDLICENCIATURA", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "IDLICENCIATURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDMODALIDAD", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IDMODALIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idlicenciatura2", Global.System.Data.SqlDbType.[Decimal], 5, Global.System.Data.ParameterDirection.Input, 3, 0, "IDLICENCIATURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CICLOESCOLAR", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCICLOESCOLAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As registroEscolaridad.REGISTRO_ESCOLARIDAD_ANTERIORDataTable, ByVal IDESPECIALIDAD As String, ByVal IDSEMESTRE As String, ByVal IDGRUPO As String, ByVal IDCAMPUS As String, ByVal IDLICENCIATURA As String, ByVal IDMODALIDAD As String, ByVal idlicenciatura2 As Decimal, ByVal CICLOESCOLAR As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IDESPECIALIDAD Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDESPECIALIDAD,String)
            End If
            If (IDSEMESTRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDSEMESTRE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IDSEMESTRE,String)
            End If
            If (IDGRUPO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDGRUPO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IDGRUPO,String)
            End If
            If (IDCAMPUS Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(IDCAMPUS,String)
            End If
            If (IDLICENCIATURA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(IDLICENCIATURA,String)
            End If
            If (IDMODALIDAD Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(IDMODALIDAD,String)
            End If
            Me.Adapter.SelectCommand.Parameters(6).Value = CType(idlicenciatura2,Decimal)
            If (CICLOESCOLAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CICLOESCOLAR")
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(CICLOESCOLAR,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IDESPECIALIDAD As String, ByVal IDSEMESTRE As String, ByVal IDGRUPO As String, ByVal IDCAMPUS As String, ByVal IDLICENCIATURA As String, ByVal IDMODALIDAD As String, ByVal idlicenciatura2 As Decimal, ByVal CICLOESCOLAR As String) As registroEscolaridad.REGISTRO_ESCOLARIDAD_ANTERIORDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IDESPECIALIDAD Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDESPECIALIDAD,String)
            End If
            If (IDSEMESTRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDSEMESTRE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IDSEMESTRE,String)
            End If
            If (IDGRUPO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDGRUPO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IDGRUPO,String)
            End If
            If (IDCAMPUS Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(IDCAMPUS,String)
            End If
            If (IDLICENCIATURA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(IDLICENCIATURA,String)
            End If
            If (IDMODALIDAD Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(IDMODALIDAD,String)
            End If
            Me.Adapter.SelectCommand.Parameters(6).Value = CType(idlicenciatura2,Decimal)
            If (CICLOESCOLAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CICLOESCOLAR")
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(CICLOESCOLAR,String)
            End If
            Dim dataTable As registroEscolaridad.REGISTRO_ESCOLARIDAD_ANTERIORDataTable = New registroEscolaridad.REGISTRO_ESCOLARIDAD_ANTERIORDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REGISTRO_ESCOLARIDAD_REPETIDORTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REGISTRO_ESCOLARIDAD_REPETIDOR"
            tableMapping.ColumnMappings.Add("APELLIDO_PATERNO", "APELLIDO_PATERNO")
            tableMapping.ColumnMappings.Add("APELLIDO_MATERNO", "APELLIDO_MATERNO")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("materianombre", "materianombre")
            tableMapping.ColumnMappings.Add("acreditadas", "acreditadas")
            tableMapping.ColumnMappings.Add("noacreditadas", "noacreditadas")
            tableMapping.ColumnMappings.Add("IDLICENCIATURA", "IDLICENCIATURA")
            tableMapping.ColumnMappings.Add("IDSEMESTRE", "IDSEMESTRE")
            tableMapping.ColumnMappings.Add("IDGRUPO", "IDGRUPO")
            tableMapping.ColumnMappings.Add("IDESPECIALIDAD", "IDESPECIALIDAD")
            tableMapping.ColumnMappings.Add("IDMATERIA", "IDMATERIA")
            tableMapping.ColumnMappings.Add("CALIFICACION", "CALIFICACION")
            tableMapping.ColumnMappings.Add("calificacion2", "calificacion2")
            tableMapping.ColumnMappings.Add("CURP", "CURP")
            tableMapping.ColumnMappings.Add("GENERO", "GENERO")
            tableMapping.ColumnMappings.Add("NOMBRE_MATERIA", "NOMBRE_MATERIA")
            tableMapping.ColumnMappings.Add("claveisenco", "claveisenco")
            tableMapping.ColumnMappings.Add("IDSTATUS", "IDSTATUS")
            tableMapping.ColumnMappings.Add("IDCAMPUS", "IDCAMPUS")
            tableMapping.ColumnMappings.Add("CARRERANOMBRE", "CARRERANOMBRE")
            tableMapping.ColumnMappings.Add("IDturno", "IDturno")
            tableMapping.ColumnMappings.Add("extra1", "extra1")
            tableMapping.ColumnMappings.Add("extra2", "extra2")
            tableMapping.ColumnMappings.Add("extra3", "extra3")
            tableMapping.ColumnMappings.Add("MATRICULA", "MATRICULA")
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.catalogosIsenco.My.MySettings.Default.ISENCOConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        A.MATRICULA, A.APELLIDO_PATERNO, A.APELLIDO_MATERNO, A.NOMBRE, M.NO"& _ 
                "MBRE AS materianombre, C.acreditadas, C.noacreditadas, A.IDLICENCIATURA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    A.IDSEMESTRE, A.IDGRUPO, A.IDESPECIALIDAD, A.MATRICULA AS Ex"& _ 
                "pr1, C.IDMATERIA, C.CALIFICACION, C.calificacion2, A.CURP, A.GENERO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                M.NOMBRE AS NOMBRE_MATERIA, M.CLAVEISENCO AS claveisenco, A.IDST"& _ 
                "ATUS, A.IDCAMPUS, A.IDLICENCIATURA AS CARRERANOMBRE, A.IDturno, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           ISNULL(C.extra1, '0') AS extra1, ISNULL(C.extra2, '0') AS extra2, ISN"& _ 
                "ULL(C.extra3, '0') AS extra3"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            alumno AS A INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "               calificaciones AS C ON A.MATRICULA = C.Matricula AND A.IDSEMESTRE"& _ 
                " = C.IDSEMESTRE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         materias AS M ON C.IDMATERI"& _ 
                "A = M.IDMATERIA "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (A.IDESPECIALIDAD = @IDESPECIALIDAD) AND (A.IDSEM"& _ 
                "ESTRE = @IDSEMESTRE) AND (A.IDGRUPO = @IDGRUPO) AND (A.IDCAMPUS = @IDCAMPUS) AND"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (A.IDLICENCIATURA = @IDLICENCIATURA) AND (A.IDMODALI"& _ 
                "DAD = @IDMODALIDAD) AND (C.IDGRUPO = @IDGRUPO) AND (A.IDSTATUS = 'REPETIDOR') AN"& _ 
                "D "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (A.IDSTATUS <> 'EGRESADO')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY A.NOMBRE, A.AP"& _ 
                "ELLIDO_PATERNO, A.APELLIDO_MATERNO, M.NOMBRE, A.IDLICENCIATURA, A.IDSEMESTRE, A."& _ 
                "IDGRUPO, A.IDESPECIALIDAD, A.IDturno, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A.MATRICULA, C."& _ 
                "IDMATERIA, C.CALIFICACION, C.calificacion2, A.CURP, A.GENERO, M.NOMBRE, M.CLAVEI"& _ 
                "SENCO, A.IDSTATUS, A.IDCAMPUS, A.IDturno, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A.IDLICENCI"& _ 
                "ATURA, A.IDSTATUS, C.extra1, C.extra2, C.extra3, C.acreditadas, C.noacreditadas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY A.APELLIDO_PATERNO, A.APELLIDO_MATERNO, A.NOMBRE, C.IDMATERIA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDESPECIALIDAD", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "IDESPECIALIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDSEMESTRE", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "IDSEMESTRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDGRUPO", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IDGRUPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCAMPUS", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCAMPUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDLICENCIATURA", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "IDLICENCIATURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDMODALIDAD", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IDMODALIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As registroEscolaridad.REGISTRO_ESCOLARIDAD_REPETIDORDataTable, ByVal IDESPECIALIDAD As String, ByVal IDSEMESTRE As String, ByVal IDGRUPO As String, ByVal IDCAMPUS As String, ByVal IDLICENCIATURA As String, ByVal IDMODALIDAD As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IDESPECIALIDAD Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDESPECIALIDAD,String)
            End If
            If (IDSEMESTRE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IDSEMESTRE,String)
            End If
            If (IDGRUPO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IDGRUPO,String)
            End If
            If (IDCAMPUS Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(IDCAMPUS,String)
            End If
            If (IDLICENCIATURA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(IDLICENCIATURA,String)
            End If
            If (IDMODALIDAD Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(IDMODALIDAD,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IDESPECIALIDAD As String, ByVal IDSEMESTRE As String, ByVal IDGRUPO As String, ByVal IDCAMPUS As String, ByVal IDLICENCIATURA As String, ByVal IDMODALIDAD As String) As registroEscolaridad.REGISTRO_ESCOLARIDAD_REPETIDORDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IDESPECIALIDAD Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDESPECIALIDAD,String)
            End If
            If (IDSEMESTRE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IDSEMESTRE,String)
            End If
            If (IDGRUPO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IDGRUPO,String)
            End If
            If (IDCAMPUS Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(IDCAMPUS,String)
            End If
            If (IDLICENCIATURA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(IDLICENCIATURA,String)
            End If
            If (IDMODALIDAD Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(IDMODALIDAD,String)
            End If
            Dim dataTable As registroEscolaridad.REGISTRO_ESCOLARIDAD_REPETIDORDataTable = New registroEscolaridad.REGISTRO_ESCOLARIDAD_REPETIDORDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DATOS_FIRMASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DATOS_FIRMAS"
            tableMapping.ColumnMappings.Add("Director1", "Director1")
            tableMapping.ColumnMappings.Add("Responsable1", "Responsable1")
            tableMapping.ColumnMappings.Add("Fecha1", "Fecha1")
            tableMapping.ColumnMappings.Add("Director2", "Director2")
            tableMapping.ColumnMappings.Add("Responsable2", "Responsable2")
            tableMapping.ColumnMappings.Add("Fecha2", "Fecha2")
            tableMapping.ColumnMappings.Add("Director3", "Director3")
            tableMapping.ColumnMappings.Add("Responsable3", "Responsable3")
            tableMapping.ColumnMappings.Add("Fecha3", "Fecha3")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.catalogosIsenco.My.MySettings.Default.ISENCOConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Director1, Responsable1, Fecha1, Director2, Responsable2, Fecha2, Director"& _ 
                "3, Responsable3, Fecha3"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     RegistroEscolar_Config where cicloescolar = @C"& _ 
                "ICLOESCOLAR AND SEMESTRE = @SEMESTRE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CICLOESCOLAR", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CICLOESCOLAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEMESTRE", Global.System.Data.SqlDbType.VarChar, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SEMESTRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As registroEscolaridad.DATOS_FIRMASDataTable, ByVal CICLOESCOLAR As String, ByVal SEMESTRE As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CICLOESCOLAR Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CICLOESCOLAR,String)
            End If
            If (SEMESTRE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SEMESTRE,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CICLOESCOLAR As String, ByVal SEMESTRE As String) As registroEscolaridad.DATOS_FIRMASDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CICLOESCOLAR Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CICLOESCOLAR,String)
            End If
            If (SEMESTRE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SEMESTRE,String)
            End If
            Dim dataTable As registroEscolaridad.DATOS_FIRMASDataTable = New registroEscolaridad.DATOS_FIRMASDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REPORTE_REGISTROTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REPORTE_REGISTRO"
            tableMapping.ColumnMappings.Add("idalumno", "idalumno")
            tableMapping.ColumnMappings.Add("idmateria", "idmateria")
            tableMapping.ColumnMappings.Add("calificacion", "calificacion")
            tableMapping.ColumnMappings.Add("calificacion2", "calificacion2")
            tableMapping.ColumnMappings.Add("reg_oport1", "reg_oport1")
            tableMapping.ColumnMappings.Add("reg_oport2", "reg_oport2")
            tableMapping.ColumnMappings.Add("reg_oport3", "reg_oport3")
            tableMapping.ColumnMappings.Add("reg_oport4", "reg_oport4")
            tableMapping.ColumnMappings.Add("reg_oport5", "reg_oport5")
            tableMapping.ColumnMappings.Add("acred_act", "acred_act")
            tableMapping.ColumnMappings.Add("acred_no", "acred_no")
            tableMapping.ColumnMappings.Add("acred_ant", "acred_ant")
            tableMapping.ColumnMappings.Add("idcampus", "idcampus")
            tableMapping.ColumnMappings.Add("idlicenciatura", "idlicenciatura")
            tableMapping.ColumnMappings.Add("idespecialidad", "idespecialidad")
            tableMapping.ColumnMappings.Add("idsemestre", "idsemestre")
            tableMapping.ColumnMappings.Add("idgrupo", "idgrupo")
            tableMapping.ColumnMappings.Add("idcicloescolar", "idcicloescolar")
            tableMapping.ColumnMappings.Add("reg_materia1", "reg_materia1")
            tableMapping.ColumnMappings.Add("reg_materia2", "reg_materia2")
            tableMapping.ColumnMappings.Add("reg_materia3", "reg_materia3")
            tableMapping.ColumnMappings.Add("reg_materia4", "reg_materia4")
            tableMapping.ColumnMappings.Add("reg_materia5", "reg_materia5")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("APELLIDO_PATERNO", "APELLIDO_PATERNO")
            tableMapping.ColumnMappings.Add("APELLIDO_MATERNO", "APELLIDO_MATERNO")
            tableMapping.ColumnMappings.Add("CURP", "CURP")
            tableMapping.ColumnMappings.Add("GENERO", "GENERO")
            tableMapping.ColumnMappings.Add("IDSTATUS", "IDSTATUS")
            tableMapping.ColumnMappings.Add("MATERIA_NOMBRE", "MATERIA_NOMBRE")
            tableMapping.ColumnMappings.Add("CLAVEISENCO", "CLAVEISENCO")
            tableMapping.ColumnMappings.Add("tipocheck", "tipocheck")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.catalogosIsenco.My.MySettings.Default.ISENCOConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT R.idalumno, R.idmateria, R.calificacion, R.calificacion2, R.reg_oport1, R."& _ 
                "reg_oport2, R.reg_oport3, R.reg_oport4, R.reg_oport5, R.acred_act, R.acred_no, R"& _ 
                ".acred_ant, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  R.idcampus, R.idlicenciatura, R.idespecialidad, "& _ 
                "R.idsemestre, R.idgrupo, R.idcicloescolar, R.reg_materia1, R.reg_materia2, R.reg"& _ 
                "_materia3, R.reg_materia4, R.reg_materia5, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  A.NOMBRE, A.APELL"& _ 
                "IDO_PATERNO, A.APELLIDO_MATERNO, A.CURP, A.GENERO, A.IDSTATUS, m.NOMBRE AS MATER"& _ 
                "IA_NOMBRE, m.CLAVEISENCO, R.tipocheck"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     reporte_registro_escolar AS R IN"& _ 
                "NER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  alumno AS A ON A.IDALUMNO = R.idalumno INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                 materias AS m ON m.IDMATERIA = R.idmateria"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (R.idcampus "& _ 
                "= @IDCAMPUS) AND (R.idlicenciatura = @IDLICENCIATURA) AND (R.idespecialidad = @I"& _ 
                "DESPECIALIDAD) AND (R.idsemestre = @IDSEMESTRE) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  (R.idgru"& _ 
                "po = @IDGRUPO) AND (R.idcicloescolar = @IDCICLOESCOLAR) AND (R.status = 'NORMAL'"& _ 
                ")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY R.idalumno, A.NOMBRE, A.APELLIDO_PATERNO, A.APELLIDO_MATERNO, A.CURP"& _ 
                ", A.GENERO, A.IDSTATUS, R.idmateria, R.calificacion, R.calificacion2, R.reg_opor"& _ 
                "t1, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  R.reg_oport2, R.reg_oport3, R.reg_oport4, R.reg_oport5, "& _ 
                "R.acred_act, R.acred_no, R.acred_ant, R.idcampus, R.idlicenciatura, R.idespecial"& _ 
                "idad, R.idsemestre, R.idgrupo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  R.idcicloescolar, R.reg_mater"& _ 
                "ia1, R.reg_materia2, R.reg_materia3, R.reg_materia4, R.reg_materia5, m.NOMBRE, m"& _ 
                ".CLAVEISENCO,r.tipocheck"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCAMPUS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "idcampus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDLICENCIATURA", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "idlicenciatura", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDESPECIALIDAD", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "idespecialidad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDSEMESTRE", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "idsemestre", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDGRUPO", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "idgrupo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCICLOESCOLAR", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "idcicloescolar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As registroEscolaridad.REPORTE_REGISTRODataTable, ByVal IDCAMPUS As String, ByVal IDLICENCIATURA As String, ByVal IDESPECIALIDAD As String, ByVal IDSEMESTRE As Long, ByVal IDGRUPO As String, ByVal IDCICLOESCOLAR As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IDCAMPUS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCAMPUS")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDCAMPUS,String)
            End If
            If (IDLICENCIATURA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDLICENCIATURA")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IDLICENCIATURA,String)
            End If
            If (IDESPECIALIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDESPECIALIDAD")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IDESPECIALIDAD,String)
            End If
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(IDSEMESTRE,Long)
            If (IDGRUPO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDGRUPO")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(IDGRUPO,String)
            End If
            If (IDCICLOESCOLAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCICLOESCOLAR")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(IDCICLOESCOLAR,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IDCAMPUS As String, ByVal IDLICENCIATURA As String, ByVal IDESPECIALIDAD As String, ByVal IDSEMESTRE As Long, ByVal IDGRUPO As String, ByVal IDCICLOESCOLAR As String) As registroEscolaridad.REPORTE_REGISTRODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IDCAMPUS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCAMPUS")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDCAMPUS,String)
            End If
            If (IDLICENCIATURA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDLICENCIATURA")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IDLICENCIATURA,String)
            End If
            If (IDESPECIALIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDESPECIALIDAD")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IDESPECIALIDAD,String)
            End If
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(IDSEMESTRE,Long)
            If (IDGRUPO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDGRUPO")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(IDGRUPO,String)
            End If
            If (IDCICLOESCOLAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCICLOESCOLAR")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(IDCICLOESCOLAR,String)
            End If
            Dim dataTable As registroEscolaridad.REPORTE_REGISTRODataTable = New registroEscolaridad.REPORTE_REGISTRODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REPORTE_REGISTRO_FUERATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REPORTE_REGISTRO_FUERA"
            tableMapping.ColumnMappings.Add("idalumno", "idalumno")
            tableMapping.ColumnMappings.Add("idmateria", "idmateria")
            tableMapping.ColumnMappings.Add("calificacion", "calificacion")
            tableMapping.ColumnMappings.Add("calificacion2", "calificacion2")
            tableMapping.ColumnMappings.Add("reg_oport1", "reg_oport1")
            tableMapping.ColumnMappings.Add("reg_oport2", "reg_oport2")
            tableMapping.ColumnMappings.Add("reg_oport3", "reg_oport3")
            tableMapping.ColumnMappings.Add("reg_oport4", "reg_oport4")
            tableMapping.ColumnMappings.Add("reg_oport5", "reg_oport5")
            tableMapping.ColumnMappings.Add("acred_act", "acred_act")
            tableMapping.ColumnMappings.Add("acred_no", "acred_no")
            tableMapping.ColumnMappings.Add("acred_ant", "acred_ant")
            tableMapping.ColumnMappings.Add("idcampus", "idcampus")
            tableMapping.ColumnMappings.Add("idlicenciatura", "idlicenciatura")
            tableMapping.ColumnMappings.Add("idespecialidad", "idespecialidad")
            tableMapping.ColumnMappings.Add("idsemestre", "idsemestre")
            tableMapping.ColumnMappings.Add("idgrupo", "idgrupo")
            tableMapping.ColumnMappings.Add("idcicloescolar", "idcicloescolar")
            tableMapping.ColumnMappings.Add("reg_materia1", "reg_materia1")
            tableMapping.ColumnMappings.Add("reg_materia2", "reg_materia2")
            tableMapping.ColumnMappings.Add("reg_materia3", "reg_materia3")
            tableMapping.ColumnMappings.Add("reg_materia4", "reg_materia4")
            tableMapping.ColumnMappings.Add("reg_materia5", "reg_materia5")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("APELLIDO_PATERNO", "APELLIDO_PATERNO")
            tableMapping.ColumnMappings.Add("APELLIDO_MATERNO", "APELLIDO_MATERNO")
            tableMapping.ColumnMappings.Add("CURP", "CURP")
            tableMapping.ColumnMappings.Add("GENERO", "GENERO")
            tableMapping.ColumnMappings.Add("IDSTATUS", "IDSTATUS")
            tableMapping.ColumnMappings.Add("MATERIA_NOMBRE", "MATERIA_NOMBRE")
            tableMapping.ColumnMappings.Add("CLAVEISENCO", "CLAVEISENCO")
            tableMapping.ColumnMappings.Add("tipocheck", "tipocheck")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.catalogosIsenco.My.MySettings.Default.ISENCOConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT R.idalumno, R.idmateria, R.calificacion, R.calificacion2, R.reg_oport1, R."& _ 
                "reg_oport2, R.reg_oport3, R.reg_oport4, R.reg_oport5, R.acred_act, R.acred_no, R"& _ 
                ".acred_ant, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  R.idcampus, R.idlicenciatura, R.idespecialidad, "& _ 
                "R.idsemestre, R.idgrupo, R.idcicloescolar, R.reg_materia1, R.reg_materia2, R.reg"& _ 
                "_materia3, R.reg_materia4, R.reg_materia5, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  A.NOMBRE, A.APELL"& _ 
                "IDO_PATERNO, A.APELLIDO_MATERNO, A.CURP, A.GENERO, A.IDSTATUS, m.NOMBRE AS MATER"& _ 
                "IA_NOMBRE, m.CLAVEISENCO, R.tipocheck"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     reporte_registro_escolar AS R IN"& _ 
                "NER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  alumno AS A ON A.IDALUMNO = R.idalumno INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                 materias AS m ON m.IDMATERIA = R.idmateria"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (R.idcampus "& _ 
                "= @IDCAMPUS) AND (R.idlicenciatura = @IDLICENCIATURA) AND (R.idespecialidad = @I"& _ 
                "DESPECIALIDAD) AND (R.idsemestre = @IDSEMESTRE) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  (R.idgru"& _ 
                "po = @IDGRUPO) AND (R.idcicloescolar = @IDCICLOESCOLAR) AND (R.status <> 'NORMAL"& _ 
                "')  AND (R.status <> 'TRASLADO') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY R.idalumno, A.NOMBRE, A.APELLIDO_PAT"& _ 
                "ERNO, A.APELLIDO_MATERNO, A.CURP, A.GENERO, A.IDSTATUS, R.idmateria, R.calificac"& _ 
                "ion, R.calificacion2, R.reg_oport1, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  R.reg_oport2, R.reg_opor"& _ 
                "t3, R.reg_oport4, R.reg_oport5, R.acred_act, R.acred_no, R.acred_ant, R.idcampus"& _ 
                ", R.idlicenciatura, R.idespecialidad, R.idsemestre, R.idgrupo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "   R.idcicloescolar, R.reg_materia1, R.reg_materia2, R.reg_materia3, R.reg_mater"& _ 
                "ia4, R.reg_materia5, m.NOMBRE, m.CLAVEISENCO,r.tipocheck"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCAMPUS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "idcampus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDLICENCIATURA", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "idlicenciatura", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDESPECIALIDAD", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "idespecialidad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDSEMESTRE", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "idsemestre", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDGRUPO", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "idgrupo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCICLOESCOLAR", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "idcicloescolar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As registroEscolaridad.REPORTE_REGISTRO_FUERADataTable, ByVal IDCAMPUS As String, ByVal IDLICENCIATURA As String, ByVal IDESPECIALIDAD As String, ByVal IDSEMESTRE As Long, ByVal IDGRUPO As String, ByVal IDCICLOESCOLAR As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IDCAMPUS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCAMPUS")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDCAMPUS,String)
            End If
            If (IDLICENCIATURA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDLICENCIATURA")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IDLICENCIATURA,String)
            End If
            If (IDESPECIALIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDESPECIALIDAD")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IDESPECIALIDAD,String)
            End If
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(IDSEMESTRE,Long)
            If (IDGRUPO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDGRUPO")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(IDGRUPO,String)
            End If
            If (IDCICLOESCOLAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCICLOESCOLAR")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(IDCICLOESCOLAR,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IDCAMPUS As String, ByVal IDLICENCIATURA As String, ByVal IDESPECIALIDAD As String, ByVal IDSEMESTRE As Long, ByVal IDGRUPO As String, ByVal IDCICLOESCOLAR As String) As registroEscolaridad.REPORTE_REGISTRO_FUERADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IDCAMPUS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCAMPUS")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDCAMPUS,String)
            End If
            If (IDLICENCIATURA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDLICENCIATURA")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IDLICENCIATURA,String)
            End If
            If (IDESPECIALIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDESPECIALIDAD")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IDESPECIALIDAD,String)
            End If
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(IDSEMESTRE,Long)
            If (IDGRUPO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDGRUPO")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(IDGRUPO,String)
            End If
            If (IDCICLOESCOLAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCICLOESCOLAR")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(IDCICLOESCOLAR,String)
            End If
            Dim dataTable As registroEscolaridad.REPORTE_REGISTRO_FUERADataTable = New registroEscolaridad.REPORTE_REGISTRO_FUERADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As registroEscolaridad, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As registroEscolaridad, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As registroEscolaridad, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As registroEscolaridad) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
