<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btnbuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA/hJREFUSEu1ll9M
        W2UYxsku8J4rk8Xd6IXeGr013ph4ZUy80JiIm1vItMBQHIiL3QJjzI7BBgxsFMagwjZYh4zpnNvApUDX
        rrT0D6VrKUhp6V/+bAVG2/H4vmf09By6pHLhl/w4h/M97/N83/m+L6d5APIKCgry6q2RPJU5nH9mMlJM
        9yPEJt0jF6TDtnZEZQkXnzaF8tmPYW/hD/9TZwztrXsYMhM4Z4/iJ/cy1P8FD+mI844ouJZ8zLX64F5Z
        AHXkV48GbDWji7jgjKHFEUMzhTTZcsM6pmUqhlbXEmrGFlGtC9hOGUP54gyU93wlx4f9aLJGcc4cQaMp
        LNI8EUGfawU6/xruzsfR41xGw8OwgFTXSLrzlogwKPZS3vWViAGVQx5DrW4RZ6lIwBhCvSGEv31rSD0j
        2Y4WTzyD1r0qaBjWC3AwDY69Km64DZIAb0KlD+HMA4KujVTkjyeznXc8GQ+sQzUeFOA6AfJgr8ohb0IM
        +HbAjdP0/n8cCwpYQhtZ5qG1FJY2sqejnV4RaqX1fF8+8Ig9nu+ir69No/Z+QKDVGMHWVsbf9ziJJhpR
        ur9rMoYn9IrSLbqeEvvSGr6W9TszAaVXp1BDC8Pc9jwRi5+mttAwGhT70hoNhUhbmyEi01Tf86P0iiMT
        oOi14cRfCzhxZwF6Wth0s4eeCs9exEYyM02NJSbTHCcvRY81E/ClxgLlLR+Uf/ow+o88gJ+9CGnAJVNU
        pvmBvNhTXIOiSxM4dnMex36fR791WZwBm5y64xeeS2l/EBE1vF6q4YCs/3vyKuo0ZQIOdRhRNTiHqhtz
        qKERS0c3t5RAHb0m7mPadEHENzOLvLCSFPvSmu8GZ3GwnY/B9i7arx7HUe0MKq57BfrM8kXkUQZWEwjH
        U1nbd5M2Qst9OljbtXw9qvWAPcWAwrYxlPe5Ud7vEdHPZXZTrhPHM24e8T+vJZ9vrrpQ2CYNUBtwpNeJ
        sisuGT/rAliifb6zLawkZK+J+znk5M1ZHLk8LXgVkqc4gy8u2pLFGhtKfnWgtGcKpSSQovzNg/ZROoTD
        PlT0uYS+k0MzeLwhDx+whMnDDkW3FQc6rOuZNegwOQ61T+CrLquAotuGYo09J9WDHqxKQhpuzQj17LWf
        PMWAD2uvnz3Y7YZCM4XDF80ZOi04nIOKXjsu6wOo/8Mj1LEHe7GnGPDK62+++tkvZu8BjRtl12ZJ5EQR
        jWI3cA3Xsgd7sacYQJ+3PW+8+9EHn6onvJ93PYJC60Xlbd+u4BquZQ/2Yk9pAH+XX3p532vvvF/V3fpx
        i36ysJO22i745ILBxrXswV5ZH311cJVD9hD7iLeI93bJ29u17CH/VcFT+b/4FzUE0vtFdketAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>